<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ben Chuanlong Du's Blog - Programming</title><link href="https://outdated.legendu.net/" rel="alternate"></link><link href="https://outdated.legendu.net/feeds/programming.atom.xml" rel="self"></link><id>https://outdated.legendu.net/</id><updated>2022-11-16T00:48:24-08:00</updated><subtitle>Change is eternal.</subtitle><entry><title>Functions and Calls in R</title><link href="https://outdated.legendu.net/blog/functions-and-calls-in-r/" rel="alternate"></link><published>2010-11-10T01:23:25-08:00</published><updated>2022-11-16T00:48:24-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2010-11-10:/blog/functions-and-calls-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;"["&lt;/code&gt; is a function in R.
It takes elements from a container (vector, matrix, list, etc.)
For example, suppose &lt;code&gt;lv&lt;/code&gt; is a list of vectors.
The following code â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;"["&lt;/code&gt; is a function in R.
It takes elements from a container (vector, matrix, list, etc.)
For example, suppose &lt;code&gt;lv&lt;/code&gt; is a list of vectors.
The following code takes the first element of each vector in &lt;code&gt;lv&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;lapply(l, &amp;quot;[&amp;quot;, 1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In this way,
you do not have to define a function to get the element of a vector by yourself.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;get_1st_elem = function(x) {
    x[1]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can assign value to an R object by its name (in string) using the function &lt;code&gt;assign&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can get the value (i.e., deep copy not reference) of an R object
(for general expression, use &lt;code&gt;eval&lt;/code&gt; with &lt;code&gt;deparse&lt;/code&gt;)
by its name (string) using the function &lt;code&gt;get&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; get(&amp;quot;x&amp;quot;)
[1] 1

&amp;gt; get(&amp;quot;as.character&amp;quot;)
function (x, ...)  .Primitive(&amp;quot;as.character&amp;quot;)

&amp;gt; get(paste(&amp;quot;as.&amp;quot;, &amp;quot;character&amp;quot;, sep = &amp;quot;&amp;quot;))(1)
[1] &amp;quot;1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;On the contratry,
you can use the function &lt;code&gt;substitute&lt;/code&gt; or &lt;code&gt;quote&lt;/code&gt; to get the name (string) of an object,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; deparse(substitute(ftree_0_4_0_0.5_100))
[1] &amp;quot;ftree_0_4_0_0.5_100&amp;quot;
&amp;gt; as.character(substitute(ftree_0_4_0_0.5_100))
[1] &amp;quot;ftree_0_4_0_0.5_100&amp;quot;
&amp;gt; as.character(quote(ftree_0_4_0_0.5_100))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The function &lt;code&gt;dclong.fs::sym2str&lt;/code&gt; is an interesting one
which tries to be smart to convert an R object to the right string.
Note that &lt;code&gt;get&lt;/code&gt; only works on object names not string containing general expressions.
To evaluate a string containing an R expression,
you have to first parse it using the function &lt;code&gt;parse&lt;/code&gt;
and then evaluate it using the function &lt;code&gt;eval&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;eval(parse(text = &amp;quot;x + 1&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are several ways to create function calls without executing it.
The first way is to use &lt;code&gt;call&lt;/code&gt; by passing the name of a function
and corresponding parameters to it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; eval(rnorm.call)
[1]  0.7618801 -1.2722733  1.1521628
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The second way is to create a list containing a function,
and parameters to be passed to the function,
and then set the mode of the list to &lt;code&gt;'call'&lt;/code&gt; or coerce it to a call using &lt;code&gt;as.call&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rnorm&lt;/span&gt;
&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;call&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.842330&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.027134&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.515679&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2.346022&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last way is to use the function &lt;code&gt;parse&lt;/code&gt; to parse expressions (string).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;expr = parse(text = &amp;quot;rnorm(3)&amp;quot;)
eval(expr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is useful when you want delayed evaluation or flexible calls.
Though you can make a function flexible using dots arguments ("..."),
you can use only one dots arguments,
and all arguments in the dots arguments must be pass to one function.
Using list with mode &lt;code&gt;'call'&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt;,
you can make a user-defined function accept list as argument,
which contains arguments to be passed to a call in the user-defined function.
In this way,
the list argument containing arguments to be passed to a call is comparable to the dots argument.
The advantage of list argument over the dots argument is that
you can use more than multiple list arguments containing arguments
to be passed to different calls in a user-defined function,
thus it is even more flexible.
Another smart use of call and &lt;code&gt;eval&lt;/code&gt; is to apply a function over a list of argument.
For example,
if you want to convert a list (of vectors/matrices) to a matrix,
you can use the following code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# create a list with elements being 2 * 2 matrices
x = list(
  a = matrix(0, 2, 2),
  b = matrix(1, 2, 2),
  c = matrix(2, 2, 2)
)

eval(as.call(c(rbind, x)))
   [,1] [,2]
[1,]    0    0
[2,]    0    0
[3,]    1    1
[4,]    1    1
[5,]    2    2
[6,]    2    2
[7,]    3    3
[8,]    3    3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There is another R &lt;code&gt;do.call&lt;/code&gt; which performs the above operations at once,
i.e., it constructs and executes a function call from a name or a function
and a list of arguments to be passed to it.
The following is another example of converting a list (of vectors/matrices) to a matrix.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;do&lt;/span&gt;.&lt;span class="nv"&gt;call&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cbind&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;list&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;matrix&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;matrix&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="ss"&gt;))&lt;/span&gt;
[,&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="w"&gt; &lt;/span&gt;[,&lt;span class="mi"&gt;2&lt;/span&gt;]&lt;span class="w"&gt; &lt;/span&gt;[,&lt;span class="mi"&gt;3&lt;/span&gt;]&lt;span class="w"&gt; &lt;/span&gt;[,&lt;span class="mi"&gt;4&lt;/span&gt;]
[&lt;span class="mi"&gt;1&lt;/span&gt;,]&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
[&lt;span class="mi"&gt;2&lt;/span&gt;,]&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In &lt;code&gt;data-structures&lt;/code&gt;,
you learned that there is a &lt;code&gt;sapply&lt;/code&gt; which can apply a function over a list.
The difference between &lt;code&gt;do.call&lt;/code&gt; and &lt;code&gt;sapply&lt;/code&gt; is that&lt;br&gt;
&lt;code&gt;do.call&lt;/code&gt; takes the whole list as an argument and returns only one result
while  &lt;code&gt;sapply&lt;/code&gt; takes each element of the list as argument and returns a list of results
(Sometimes, theses results are reformed to a simpler data structure,
e.g. a vector or a matrix.).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To check whether an object is a call, you can use &lt;code&gt;is.call&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can refer to missing arguments in user-defined functions.
R will not complain until these missing arguments are really required.
For example consider the following silly function.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;function&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;{
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;{
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;}
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
}
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
[&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that &lt;code&gt;foo(-1)&lt;/code&gt; calls &lt;code&gt;foo(x = 1, y = y)&lt;/code&gt;.
You might think that this is not valid because the argument &lt;code&gt;y&lt;/code&gt; is missing,
however,
R does not complain about it because the argument &lt;code&gt;y&lt;/code&gt; is never used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;try&lt;/code&gt; allows us to handle error-recovery,
which is similar to &lt;code&gt;try-catch-end try&lt;/code&gt; in vb.net.
If you this function,
R does not stop executing code when error is detected,
rather you can decide what to do when error happens.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can use function &lt;code&gt;switch&lt;/code&gt; to write branch statement in R,
however this function is not very friendly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can use command &lt;code&gt;stop&lt;/code&gt; to stop executing a function in R,
however it will print error message at the same time.
And what's more,
no values can be returned.
To avoid printing error messages or to return values when exiting a function,
we can use function &lt;code&gt;return&lt;/code&gt;.
Even if a function do not return anything,
we can pass it as a argument to &lt;code&gt;return&lt;/code&gt;,
and absolutely nothing will be return in this case.
This can be help if we do not want anything to be return in a user-defined function.
Notice that you can use return as a statement (i.e. put it on a single line),
but it has no effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use the names of build-in functions in R as parameter in self-defined functions.
To avoid confusion,
we can we use name space such as &lt;code&gt;base::matrix&lt;/code&gt; instead of &lt;code&gt;matrix&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can define overloaded functions and functions with uncertain number of variables (using &lt;code&gt;...&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can define a function inside another function in R.
This can be helpful when we want to define some function that never be used again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can define sub functions in a function, which is very convenient.
For example,
sometimes you want to call another function inside a function.
However,
the function that you want to call is different every time
and you even do not how to define it before you get intermediate results,
i.e. the function that you want to call does not just differ in the form of arguments.
To achieve this,
you can use the strategy of defining sub functions inside a function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some functions in R require a function as argument.
To pass value to the argument,
you can directly give the define of a function instead of writing a function first
and then pass the name of the defined function to the argument.
This can be very convenient sometime,
e.g. when you use function &lt;code&gt;apply&lt;/code&gt;,
the function that you want to call is not define in R yet very simple,
then you can use the strategy of passing definition to argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In R the arguments passed to a function can be changed,
e.g. if x is a argument a function,
then you can assign a new value to x.
Notice that in some other languages,
the arguments passed to a function cannot be changed, e.g. Mathematica.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For most functions in R,
you can just type in their names in R GUI to get their source code;
for functions written in S3,
you can use function &lt;code&gt;getS3method&lt;/code&gt; to get their source code;
for other functions written in C or Fortran,
you have to download the source code of R in order to find the source code of these functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a R function which accepts the dots argument (...),
you can pass basically any argument to it including dots itself.
So if you want to pass all stuff in a dots argument to a function,
you do not have to parse it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usually built-in R functions have many arguments
and because R use partial matches to pass arguments to functions,
you might never get a warning message
if you use some argument that actually does not exist.
If this happens when you use a function directly,
it is possible for you to find this subtle mistake.
However, if you make this kind of mistakes in a user-defined function,
then it can be a very tricky bug.
So it is recommended that you always check the arguments of functions
that you are not very familiar with before you use it.
When you come across some tricky bugs,
you might want to check whether it is resulted from miss-passed argument(s) or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R uses buffer to store the output and then print it when the buffer is full.
In order to print the information immediately you can use function &lt;code&gt;flush.console&lt;/code&gt;
after you use function &lt;code&gt;cat&lt;/code&gt; to print out information.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you always use &lt;code&gt;{}&lt;/code&gt; when use branches and loops in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An R object exists ever since it is defined
until the end of its current evaluation environment.
So unlike C++ and Java in which an object defined in a block is only in effect in that block,
an object in R defined in a block will still be in effect outside the block.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;with&lt;/code&gt; allows us to evaluate expressions in a data environment,
so it's convenient to use it to work with data frames.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;T&lt;/code&gt; to stand for &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;F&lt;/code&gt; stand for &lt;code&gt;FALSE&lt;/code&gt; when you write code in R,
but you'd better use &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt;
when you write user-defined functions
because &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;F&lt;/code&gt; are actually global variables that are defined as &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt;
while &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt; are constant in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function&lt;code&gt;missing&lt;/code&gt; tests whether a value has been specified as an argument for a function,
so it can be used write very robust functions and functions with flexible number of arguments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some functions in R can only be use when R is run in interactive mode.
If you want your code to run flawlessly in any mode,
you can use &lt;code&gt;interactive&lt;/code&gt; to check whether R is run in interactive mode or command mode,
and modify your code correspondingly.
Notice that when compiling an R package (commands such as &lt;code&gt;R CMD build&lt;/code&gt; are used),
R is run in command mode.
As the reason mentioned before,
some of your examples might not run correctly,
which can make your package fail to pass the test.
A simply tricky is to include your code in block &lt;code&gt;if (interactive()) { ... }&lt;/code&gt;,
so that it will not run when the package is compiled
while it runs perfectly when copied and pasted in R GUI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pmatch&lt;/code&gt; performs partial string matching. If a function takes a
string argument, you can incorporate partial matching technic so
that the users can use partial values for the string argument. This
can make it a better experience for users to use the function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usually a &lt;code&gt;for&lt;/code&gt; loop is more convenient than a &lt;code&gt;while&lt;/code&gt; loop in all
kinds of programing languages. However, a &lt;code&gt;for&lt;/code&gt; loop in R requires a
vector specifying the loop range. Sometimes it's not very convenient
to construct a general purpose vector for a loop, e.g. if a loop
starts from &lt;code&gt;loopStart&lt;/code&gt; and ends at &lt;code&gt;loopEnd&lt;/code&gt; with a step &lt;code&gt;loopStep&lt;/code&gt;
but &lt;code&gt;loopEnd&lt;/code&gt; is not always greater than &lt;code&gt;loopStart&lt;/code&gt;, then it's
clumsy to use &lt;code&gt;loop&lt;/code&gt;. In this kind of situations, you can use a
&lt;code&gt;while&lt;/code&gt; loop instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The vector in a for loop is calculated once and stored.
So it will not take more time if you put an expression
which generate the needed vector in for loop.
What is more,
if you use an existing vector,
the for loop will not be affected even if you change the original vector.
(How about while loop? I think it is the same.
In one word,
the conditions is determined before the loop and cannot be changed in the loop.
It is the same in MATLAB, but different in Java.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;addTaskCallback&lt;/code&gt; registers an R function that is to be called
each time a top-level task is completed.
&lt;code&gt;removeTaskCallback&lt;/code&gt; and &lt;code&gt;taskCallbackManager&lt;/code&gt; are also very useful functions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="function"></category><category term="programming"></category><category term="call"></category><category term="CRAN"></category></entry><entry><title>Use q to Query Text File Using SQL Syntax</title><link href="https://outdated.legendu.net/blog/q-query-text-file-sql/" rel="alternate"></link><published>2016-06-05T16:19:58-07:00</published><updated>2020-03-05T16:19:58-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-06-05:/blog/q-query-text-file-sql/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is suggested that you use Python 
instead of &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt; 
to manipulate text files!&lt;/p&gt;
&lt;h2 id="installation-on-ubuntu"&gt;Installation on Ubuntu&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python3-q-text-as-data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="general-tips"&gt;General Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The semantics of &lt;code&gt;q&lt;/code&gt; is â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is suggested that you use Python 
instead of &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt; 
to manipulate text files!&lt;/p&gt;
&lt;h2 id="installation-on-ubuntu"&gt;Installation on Ubuntu&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python3-q-text-as-data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="general-tips"&gt;General Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The semantics of &lt;code&gt;q&lt;/code&gt; is identical to &lt;code&gt;sqlite&lt;/code&gt;. 
    &lt;code&gt;q&lt;/code&gt; preserve the original order of rows if no sorting (order by) is applied.
    You force querying by the order of insertion 
    by adding an &lt;code&gt;order by rowid&lt;/code&gt; if needed (similar to sqlite).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Output in quote mode does not work well. 
    Double quotes are not escaped.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Joins do not work on files with different separators. 
    You have to convert them to have the same field separator first
    and then perform joins. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If no header, then use c&lt;span class="math"&gt;\(i\)&lt;/span&gt; to stand for the &lt;span class="math"&gt;\(i^{th}\)&lt;/span&gt; column.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="examples"&gt;Examples&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Randomly select 500 records.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;q&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select * from text_file order by random() limit 5&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sample with acceptance ratio 0.01.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;q&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select * from text_file where random() % 100 = 0&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;-&lt;/code&gt; to stand the piped in output. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;head -n 1000 text_file | q &amp;quot;select * from - where age &amp;lt; 30&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use q to find Docker images without repository names.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker images | tail -n +2 | q &amp;#39;select c3 from - where c1 = &amp;quot;&amp;lt;none&amp;gt;&amp;quot;&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all images belong to the eclipse organization with the help of sed and q.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;+/&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;select [image id] from - where repository like &amp;#39;eclipse/%&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xargs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rmi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="alternative-tools"&gt;Alternative Tools&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/dinedal/textql"&gt;textql&lt;/a&gt; (developed in Go) 
    is a very similar tool to &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt;.
    It has even simplier syntax than q.
    However, 
    it has several disadvantages compared to q.
    First, it is not as actively maintained as q.
    Second, no easy way to install except in Mac (using Homebrew). 
    You have to install from source by yourself in Linux and Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can import text files into database tables and work on them. 
    SQLite3 is a great choice (of embeded database). 
    As a matter of fact, 
    both q and textql are based on SQLite3.
    You can refer to https://www.sqlite.org/cvstrac/wiki?p=ImportingFiles 
    on how to importing files into SQLite3.
    If you prefer a client-server database, 
    you can either MySQL, etc. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CREATE TABLE foo (
    id Int, 
    msg VarChar(255), 
    value Decimal(8, 4)
)
;

LOAD DATA INFILE &amp;#39;/tmp/data.txt&amp;#39; 
INTO TABLE foo
;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;http://harelba.github.io/q/&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Programming"></category><category term="programming"></category><category term="SQL"></category><category term="structured text"></category><category term="CSV"></category><category term="TSV"></category></entry><entry><title>Tips on R</title><link href="https://outdated.legendu.net/blog/r-tips/" rel="alternate"></link><published>2013-10-29T17:08:42-07:00</published><updated>2020-02-29T17:08:42-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2013-10-29:/blog/r-tips/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;commandArgs extract command line â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;commandArgs extract command line arguments when R seesion was invoked. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if performance is not critical, 
    then it is a good idea to always check the type of parameters. 
    Be flexible causes too many problems, 
    e.g., you problem of boolean and integer, 
    you thought they are equivalent, but actually not becuase there are revoke functions 
    which replies on boolean input. 
    integer input doesn't make the code throw any error, but the result is not right ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;some constants: letters LETTERS, month.name, month.abb, for more see base::Constants&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;auto complete in window works, 
    however, be careful with file names, if file name is in big letters, 
    you must use big letters in order for auto complete to work, i.e. type exactly as you see the files &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;in the situation where data format is not necessarily consistent, 
    it is very good idea to pass names of columns that you need as parameters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if both character and numeric are OK, prefer to use numerc as it's more convenient&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="debugging"&gt;Debugging&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can the debug a function using the function &lt;code&gt;debug&lt;/code&gt;. 
    For example, 
    you can use the following command to debug a function named &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;During debugging,
you can type &lt;code&gt;Q&lt;/code&gt; to quit the process.
For this reason, 
you'd better not use &lt;code&gt;Q&lt;/code&gt; as a variable name in user-defined functions.
The the function &lt;code&gt;f&lt;/code&gt; is no longer debugged once you source in its code again.
You can also undebug it manually be the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;undebug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="other"&gt;Other&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;R uses a copy-on-write technic which is similar to what MATLAB does.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;fix&lt;/code&gt; can be used to fix object in R, 
    which can be very convenient.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sometimes, 
    you want to check the source code of a function in R. 
    To do this, 
    you can just type in the name of the function in R. 
    However, 
    for functions which call interfaces written by C/C++ or Fortran this does not work. 
    You must download the source code of the corresponding R package, 
    and check the code there. 
    However, 
    for functions written in S3 method, 
    you can use function &lt;code&gt;getS3method&lt;/code&gt; to check the source code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;getAnywhere&lt;/code&gt; can show you code of functions that are written s3 or
    s4 method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;S3method object uses &lt;code&gt;$&lt;/code&gt; while s4method object uses &lt;code&gt;@&lt;/code&gt; to extract
    elements. You can use &lt;code&gt;str&lt;/code&gt; to see the structure of both of the two
    types of objects. And which symbol to use will be indicated in the
    output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always save R workspaces for important projects. 
    You might need intermediate results in the work space later
    or you might need to debug the code.
    The saved R workspaces will make things easier for you.
    Sometimes you have to (automatically) run the a same script many time (with different arguments)
    and it is possible to save workspaces for all of them due to disk limit.
    You can save all workspace to the same file so that the old workspace is overwriten by the new one.
    This way you do not consume too much space but still keep a workspace in case you need it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make code robust and avoid using functions/packages that your are not familiar about, 
    if you do want to use them, read the help doc first, make sure you understand how it works!!!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it is suggested that you use R in Linux as much as possible. 
    First, R intrinsically has a bloody of Linux and thus some functions are best supported in Linux.
    Second, the IT services are often deployed on Linux so if you get a file from a service it is likely to be in Linux format.
    Finally, Linux has good support of Windows format while the opposite is not true. 
    Reading a Windows formatted file on Linux has no problem while reading a Linux format file on Windows can have problems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="tips"></category><category term="programming"></category><category term="CRAN"></category><category term="R"></category></entry><entry><title>Regular Expression in R</title><link href="https://outdated.legendu.net/blog/regular-expression-in-r/" rel="alternate"></link><published>2012-11-14T11:56:44-08:00</published><updated>2019-12-14T11:56:44-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-14:/blog/regular-expression-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;There are two flavors â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;There are two flavors of regular expression in R.
One is the regular expression (grep, sub, etc.) comes with base. 
The other good one comes with the stringi package.
Both of the versions of regular expression support modifiers.
Generally speaking, regular expression modifiers overwrite function options if confliction happens. &lt;/p&gt;
&lt;h3 id="regular-expression-in-the-stringi-package"&gt;Regular Expression in the &lt;code&gt;stringi&lt;/code&gt; Package&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; matches anything except (by default) &lt;code&gt;\n&lt;/code&gt; 
which is very confusing and error-prone 
as it is not the default behavior in other versions of regular expression.
The modifier &lt;code&gt;(?s)&lt;/code&gt; changes the default behavior of &lt;code&gt;.&lt;/code&gt; and matches &lt;code&gt;\n&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="regular-expression-in-the-base-package"&gt;Regular Expression in the &lt;code&gt;base&lt;/code&gt; Package&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;regexpr&lt;/code&gt; instead of &lt;code&gt;grepl&lt;/code&gt; in some cases if you want to check whether something exists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be default, many functions use regular expression match. 
If you do not want to use regular expression match, 
turn it off using the option &lt;code&gt;fixed = TRUE&lt;/code&gt;.
For example, 
if you want split strings by &lt;code&gt;|&lt;/code&gt; using the function &lt;code&gt;strsplit&lt;/code&gt;. 
You have to use &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;strsplit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;|&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fixed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;instead of&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;strsplit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;|&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which has &lt;code&gt;fixed = FALSE&lt;/code&gt;.&lt;/p&gt;</content><category term="Programming"></category><category term="R"></category><category term="regex"></category><category term="programming"></category><category term="CRAN"></category><category term="regular expression"></category></entry><entry><title>Install R Kernel for JupyterLab</title><link href="https://outdated.legendu.net/blog/install-r-kernel-for-jupyterlab/" rel="alternate"></link><published>2016-12-25T20:22:24-08:00</published><updated>2019-04-25T20:22:24-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-12-25:/blog/install-r-kernel-for-jupyterlab/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install JupyterLab.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install â€¦&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install JupyterLab.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python3&lt;span class="w"&gt; &lt;/span&gt;python3-pip&lt;span class="w"&gt; &lt;/span&gt;python3-setuptools
sudo&lt;span class="w"&gt; &lt;/span&gt;-H&lt;span class="w"&gt; &lt;/span&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;jupyter&lt;span class="w"&gt; &lt;/span&gt;jupyterlab
sudo&lt;span class="w"&gt; &lt;/span&gt;jupyter&lt;span class="w"&gt; &lt;/span&gt;serverextension&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--py&lt;span class="w"&gt; &lt;/span&gt;jupyterlab&lt;span class="w"&gt; &lt;/span&gt;--sys-prefix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Install dev libraries required by IRKernel (or its dependent packages). &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;libssl-dev&lt;span class="w"&gt; &lt;/span&gt;libcurl4-openssl-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you are still on Ubuntu 14.04, 
you might have to force &lt;code&gt;libssl&lt;/code&gt; to downgrade. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;libssl1.0.0/trusty
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Upgrade R to the latest version.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;update&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;r-base-core
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Upgrade R packages to the latest version. 
Open an R sesseion using &lt;code&gt;sudo&lt;/code&gt; and run the following statement. 
It takes a while, so be patient. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;update.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ask&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;checkBuilt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Install IRkernel and register it.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# install dependencies packages of IRKernel&lt;/span&gt;
&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;repr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;IRdisplay&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;crayon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pbdZMQ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;devtools&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# install IRkernel&lt;/span&gt;
&lt;span class="n"&gt;devtools&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;install_github&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;IRkernel/IRkernel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# register IRkernel&lt;/span&gt;
&lt;span class="n"&gt;IRkernel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;installspec&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If for any reason you cannot install devtools, 
you can manually download IRkernel and its dependencies and install them.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;evaluate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# assume you have downloaded IRkernel-0.7.1.tar.gz&lt;/span&gt;
&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;IRkernel-0.7.1.tar.gz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Configure JupyterLab.
First, run the following command to generate a configuration file for JupyterLab.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter&lt;span class="w"&gt; &lt;/span&gt;lab&lt;span class="w"&gt; &lt;/span&gt;--generate-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Second, edit the configuration file as neede. 
    - ip
    - browser 
    - working directory&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure that the directory &lt;code&gt;~/.local/share/jupyter&lt;/code&gt; and its subcontents belogn to you rather than &lt;code&gt;root&lt;/code&gt;.
If they belong to &lt;code&gt;root&lt;/code&gt; then change the own to you by running the following command.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;chown&lt;span class="w"&gt; &lt;/span&gt;-R&lt;span class="w"&gt; &lt;/span&gt;username:usergroup&lt;span class="w"&gt; &lt;/span&gt;~/.local/share/jupyter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Start JupyterLab.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nohup&lt;span class="w"&gt; &lt;/span&gt;jupyter&lt;span class="w"&gt; &lt;/span&gt;lab&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="issues"&gt;Issues&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Matrices are not displayed correctly.
They are shown as vectors instead.
However,
data frames are displayed correctly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flush.console does not work well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.Last.value retrieves the return value of the last expression in R.
It is not working in Jupyter 0.7 or older.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IRKernel does not implement magics currently.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="programming"></category><category term="R"></category><category term="CRAN"></category><category term="IRKernel"></category><category term="Jupyter"></category><category term="JupyterLab"></category></entry><entry><title>R Package DT</title><link href="https://outdated.legendu.net/blog/r-package-dt/" rel="alternate"></link><published>2018-05-27T16:16:48-07:00</published><updated>2018-05-27T16:16:48-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2018-05-27:/blog/r-package-dt/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;p&gt;https://rstudio.github â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;p&gt;https://rstudio.github.io/DT/&lt;/p&gt;
&lt;p&gt;&lt;a href="https://datatables.net/"&gt;DataTables Homepage&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="github-issues"&gt;GitHub Issues&lt;/h2&gt;
&lt;p&gt;Feature request: Conditional Formatting/Cell Borders
https://github.com/rstudio/DT/issues/347&lt;/p&gt;
&lt;p&gt;https://github.com/rstudio/DT/issues/183&lt;/p&gt;
&lt;p&gt;Comma as decimal separator
https://github.com/rstudio/DT/issues/128&lt;/p&gt;
&lt;p&gt;Thousands separator
https://github.com/rstudio/DT/issues/133&lt;/p&gt;</content><category term="Programming"></category><category term="programming"></category><category term="cran"></category><category term="DT"></category><category term="datatables.js"></category></entry><entry><title>stringi Tips</title><link href="https://outdated.legendu.net/blog/stringi-tips/" rel="alternate"></link><published>2017-06-06T08:03:00-07:00</published><updated>2017-09-06T08:03:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2017-06-06:/blog/stringi-tips/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is suggested that â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is suggested that you use the package &lt;code&gt;stringi&lt;/code&gt; instead of string utilities in R base. 
    There are multiple reasons.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;- stringi has consistent namings and signatures
- the behavior of functions in stringi is more reasonable from engineering perspective
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="regular-expression"&gt;Regular Expression&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Use &lt;code&gt;$1&lt;/code&gt; instead of &lt;code&gt;\\1&lt;/code&gt; to capture the nth capture group,
and similarly for other capture groups.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="programming"></category><category term="stringi"></category><category term="CRAN"></category></entry><entry><title>Develop R Packages Using "roxygen2"</title><link href="https://outdated.legendu.net/blog/develop-r-packages-using-roxygen2/" rel="alternate"></link><published>2012-06-27T12:41:29-07:00</published><updated>2017-07-27T12:41:29-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-06-27:/blog/develop-r-packages-using-roxygen2/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You have to install the R package &lt;code&gt;roxygen2&lt;/code&gt; first.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;roxygen2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Roxygenize the package for compiling.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roxygen2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;roxygenize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path_to_package&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The following are some roxygen2 tags â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You have to install the R package &lt;code&gt;roxygen2&lt;/code&gt; first.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;roxygen2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Roxygenize the package for compiling.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roxygen2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;roxygenize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path_to_package&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The following are some roxygen2 tags that I use frequently for writing R packages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Some R example code can take a long time to run. 
    To prevent the illustration code from running 
    when checking the package, 
    you can surround the example code with &lt;code&gt;\dontrun{}&lt;/code&gt;.
    The following is such an example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; @examples&lt;/span&gt;
&lt;span class="s1"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;dontrun&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; rnorm(100000)&lt;/span&gt;
&lt;span class="s1"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, 
be careful that it is &lt;code&gt;@examples&lt;/code&gt; not &lt;code&gt;@example&lt;/code&gt;. 
If you accidentally use &lt;code&gt;@example&lt;/code&gt;, 
then you will get errors like &lt;code&gt;file cannot be open (or doesn't exist) ...&lt;/code&gt;
when you check the R package. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default roxygen2 does not export a function. To export a function
    so that package users can use it, add tag &lt;code&gt;@export&lt;/code&gt; before the definition
    of the function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the tag &lt;code&gt;@title&lt;/code&gt; to specify the title of a help document. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the tag &lt;code&gt;@description&lt;/code&gt; to start the description part of a help document.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To import a package, use the tag &lt;code&gt;@import pkg_name&lt;/code&gt;. To import &lt;code&gt;fun1&lt;/code&gt; 
    and &lt;code&gt;fun2&lt;/code&gt; from a package, use the tag &lt;code&gt;@importFrom pkg_name fun1 fun2&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default roxygen2 creates a Rd document for each exported function
    with the same name as the function name. 
    You can use the tag &lt;code&gt;@rdname&lt;/code&gt; to override the name of the Rd document.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Roxygen parses comments that start with &lt;code&gt;#'&lt;/code&gt;. 
    Comment start with &lt;code&gt;#&lt;/code&gt; but not &lt;code&gt;#'&lt;/code&gt; won't be parsed.
    You can take advantage of this to put comment that do not need to parsed into lines starting with &lt;code&gt;#&lt;/code&gt; but not &lt;code&gt;#'&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="compile-and-install-r-packages"&gt;Compile and Install R Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Compile and install package on Windows.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;CMD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;INSTALL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;build&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;package_dir&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that &lt;code&gt;INSTALL&lt;/code&gt; must be in upper case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The following LaTex packages &lt;code&gt;texlive&lt;/code&gt;, &lt;code&gt;texinfo&lt;/code&gt; and &lt;code&gt;texlive-fonts-extra&lt;/code&gt; (on Linux) 
    are need to compile R packages 
    if you want to generate and check PDF manuals. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig install texlive texinfo texlive-fonts-extra
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you do not want (or have permissions) to install them,
you can compile R packages without generating PDF manuals.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;R CMD build --no-manual ...
R CMD check --no-manual ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more details on R package build options, 
please refer to the post 
&lt;a href="https://support.rstudio.com/hc/en-us/articles/200486518-Customizing-Package-Build-Options"&gt;Customizing Package Build Options&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="package"></category><category term="programming"></category><category term="tags"></category><category term="CRAN"></category><category term="roxygen2"></category><category term="develop"></category></entry><entry><title>Zero-length Vector Issue in R</title><link href="https://outdated.legendu.net/blog/zero-length-vector-issue-in-R/" rel="alternate"></link><published>2017-04-10T19:21:27-07:00</published><updated>2017-04-10T19:21:27-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2017-04-10:/blog/zero-length-vector-issue-in-R/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The corner case of 0-length vectors is not well considered in R. 
It causes issues in several situations. 
First, &lt;code&gt;1:n&lt;/code&gt; is probably not what you want â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The corner case of 0-length vectors is not well considered in R. 
It causes issues in several situations. 
First, &lt;code&gt;1:n&lt;/code&gt; is probably not what you want when &lt;code&gt;n = 0&lt;/code&gt;. 
Second, &lt;code&gt;df$col = 0&lt;/code&gt; throws error when &lt;code&gt;df&lt;/code&gt; is an empty (0 row) data frame.
To avoid these issues, 
it is suggested that you write more robust R code. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# use &lt;/span&gt;
&lt;span class="nf"&gt;seq_len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# instead of &lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# use &lt;/span&gt;
&lt;span class="nf"&gt;for &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;seq_len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kc"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# instead of &lt;/span&gt;
&lt;span class="nf"&gt;for &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kc"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# use &lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;nrow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# instead of &lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Strings function in base R do not behavior well when zero-length vectors are involved. 
For example, 
&lt;code&gt;paste('a', character(0))&lt;/code&gt; returns a character vector of length 1 
rather than length 0. 
Functions in the &lt;code&gt;stringi&lt;/code&gt; packages works well when zero-length vectors are involved.
For example, the code below returns a 0-length vector.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stringi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="sc"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;+%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is suggested that you always use string functions in the &lt;code&gt;stringi&lt;/code&gt; package 
rather than string functions in base R.&lt;/p&gt;</content><category term="Programming"></category><category term="programming"></category><category term="CRAN"></category><category term="R"></category><category term="issue"></category><category term="trick"></category><category term="trap"></category><category term="vector"></category><category term="zero-length"></category><category term="0-length"></category></entry><entry><title>Traps in R</title><link href="https://outdated.legendu.net/blog/traps-in-r/" rel="alternate"></link><published>2012-11-09T23:47:21-08:00</published><updated>2017-04-09T23:47:21-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-09:/blog/traps-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/zero-length-vector-issue-in-R/"&gt;Zero-Length Vector Issue in R&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A really tricky problem about is global and local variables. 
You can use any global variable in a user-defined function, 
which is â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/zero-length-vector-issue-in-R/"&gt;Zero-Length Vector Issue in R&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A really tricky problem about is global and local variables. 
You can use any global variable in a user-defined function, 
which is true at least in R with version 2.13 or older. 
For example if you have defined a global variable &lt;code&gt;a&lt;/code&gt;, 
you can use variable &lt;code&gt;a&lt;/code&gt; directly in user-defined functions. 
However, 
you cannot use &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;-&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; to mutate global variables. 
Whenever you use these three operators, 
R thinks that you're either creating a new variable 
(if the variable is not defined before), 
or you're updating the value of an existing variable 
(if the variable already exists). 
For example, 
suppose there's still a global variable &lt;code&gt;a&lt;/code&gt; in the R workspace. 
You can use variable &lt;code&gt;a&lt;/code&gt; directly in user-defined functions, 
but if you use &lt;code&gt;a=2&lt;/code&gt; (or &lt;code&gt;a&amp;lt;-2&lt;/code&gt; or &lt;code&gt;2-&amp;gt;a&lt;/code&gt;) in the user-defined function, 
R won't think that you're updating the value of the global variable, 
instead it things that you're creating a new local variable &lt;code&gt;a&lt;/code&gt;. 
For this reason, 
if a global variable &lt;code&gt;a&lt;/code&gt; exists 
while there's no local variable &lt;code&gt;a&lt;/code&gt; in a user-defined function, 
error message will be shown if you use &lt;code&gt;a[1]=1&lt;/code&gt; (or other equivalent ways)
and try to run the function, 
because by doing this you're telling R 
that you want to update the value of the first element of local variable &lt;code&gt;a&lt;/code&gt; 
but local variable &lt;code&gt;a&lt;/code&gt; doesn't exist. 
If you really want to update the value of (or create) a global variable 
in a user-defined function, 
you should use operator &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt;. 
For example, 
if you want to update the value of global variable &lt;code&gt;a&lt;/code&gt;, 
you can use &lt;code&gt;a&amp;lt;&amp;lt;-2&lt;/code&gt; (or &lt;code&gt;2-&amp;gt;&amp;gt;a&lt;/code&gt;). 
Now you have seen that global variables can screw the execution result 
of your own defined function easily. 
The situation can become even trickier and thus harder to debug, 
if you define a local variable in a branch 
(e.g. a branch of &lt;code&gt;if()...else...&lt;/code&gt; statement) of the code 
while forget to define the same local variable in other branches 
and at the same time a global variable with the same name exists. 
My suggestion is that you first remove all global variables 
in the R workspace if there is any, 
and then run your program. 
In this way,
you can avoid confusion resulting from global variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always be careful when there is an operation based on two vectors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sequence operator (&lt;code&gt;:&lt;/code&gt;) has a higher priority over arithmetic operators (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;), 
but a lower priority than the power operator (&lt;code&gt;^&lt;/code&gt;) and element operator (&lt;code&gt;[]&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expression &lt;code&gt;2^1^2&lt;/code&gt; is calculated from right to left in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid use function &lt;code&gt;median&lt;/code&gt; if you can, 
because it returns two numbers when the vector has an even number of elements, 
which is usually not what statisticians want 
and might result in serious problems in many cases. 
Actually we can always use &lt;code&gt;quantile(x,prob=0.5)&lt;/code&gt; to get the median of vector &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For functions which takes &lt;code&gt;...&lt;/code&gt; as one of its parameters, 
we have to be very careful.
Because this kind of functions accept any number and any kind of parameters. 
So sometime you think that you are passing values to some argument of a function, 
but actually not. 
For example if you use &lt;code&gt;seq(0,100,step=2)&lt;/code&gt; you might be in trouble. 
The right command that works in this situations can be &lt;code&gt;seq(0,100,by=2)&lt;/code&gt;.
Nowadays, 
there are many different programming languages, 
and all of them have their own advantages and disadvantages. 
So we might have learned several different programming languages. 
And we are probably told not to remember all functions by heart, 
instead, we can check the syntax of functions when we have to use them. 
This is an efficient way which is also my way to learn programming languages.
However, 
this might can lead to problems sometimes. 
Because we're lazy, 
we might just guess syntax of functions that we're going to use. 
This is not a big problem in complied languages, 
because anyway the syntax will be checked later 
and what is more usually we have good editors to help us (e.g. eclipse for Java). 
R is a interpreted language, 
so even if there're syntax errors you might can still run it. 
And because of high flexibility of R, 
it is very hard to editor for R to find these tricky mistakes. 
So if we can, 
we should always at least check the arguments of the functions 
we are going to use in R. 
A simple way is just to use function &lt;code&gt;args&lt;/code&gt;. 
If we have used &lt;code&gt;args&lt;/code&gt; to check the arguments of function &lt;code&gt;seq&lt;/code&gt;, 
then the chance for us to make the mistakes mentioned above is very small. 
Also it is recommended to always pass arguments to functions 
using argument names, 
i.e., 
using the form &lt;code&gt;argname1=argvalue1&lt;/code&gt; to pass arguments to functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get the length of a vector, 
you can use &lt;code&gt;length&lt;/code&gt;. 
However, 
to get the length of a string, 
you should use &lt;code&gt;nchar&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;round&lt;/code&gt; in use the close even number strategy which might not what you expect, 
so be careful when you use it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a &lt;code&gt;for&lt;/code&gt; loop, 
the loop vector is immutable while the loop is running. 
This means that R calculates the loop vector only once, 
an for this reason, feel free to ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is often that one want to build a larger array based on small arrays. 
For example, 
one build a 3-D array by repeating a 2-D matrix. 
You should be careful if the "matrix" you used is obtained by reading data from a file, 
because it's really a data frame often times. 
All elements in an array have the same type, 
while elements in a data frame do not have to share the same type. 
For this reason, 
it is really inefficient to build an array based on a data frame 
(if even all columns of the data frame share the same type). 
If you do this for a large data frame, 
R can choke. 
A good way is to first convert the data frame to a matrix using &lt;code&gt;as.matrix&lt;/code&gt;, 
and then build the array you want based on the matrix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R runs commands in &lt;code&gt;Rprofile.site&lt;/code&gt;, 
then loads the save image (if any), 
and then runs &lt;code&gt;.First&lt;/code&gt; (if exists). 
This means that if you want to run something which depends the R image, 
you must put it into the &lt;code&gt;.First&lt;/code&gt; instead of &lt;code&gt;Rprofile.site&lt;/code&gt;. 
However, 
it seems that there is a bug with Rstudio (at least before version 0.94), 
who does not follow the above order when it starts R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usually the number of levels of a factor equals the number of distinct elements in the factor, 
however, 
it doesn't have to be.
Except factitious ones, 
the situation that the two quantities are not the same usually happens 
after subsetting a data frame or factor. 
If the number of levels of a factor is not the same 
with the number of its distinct elements, 
you can apply &lt;code&gt;factor&lt;/code&gt; on itself to get a factor with the two quantities identical.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never use a factor for the index of subsetting, 
because if used it will be coerced to an integer vector 
which is usually not what people expect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R allows lazy evaluation to some extent, 
e.g., 
as almost all other languages do, 
boolean expression in R are evaluated using lazy evaluation. 
What is more important is that missing arguments are allowed for R functions 
(i.e. you do not have to pass values to some arguments, 
and everything runs OK as long as missing arguments are not involved in computing), 
and missing arguments can even be further passed to sub-functions 
(Everything runs OK as long as missing arguments are never used in computing). 
Here is an illustration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exact&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;na.rm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nf"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exact&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;na.rm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;na.rm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[1] 1.667
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, 
R does not fully support lazy evaluation, 
and you shall not expect code involve advanced lazy evaluation 
(need an example there ...) to work well. 
Part of the reason for not supporting advanced lazy evaluation in R 
is that it invites many problems and can probably result in fetal mistakes.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Because of the way that computers stores double values, 
there are always tiny storing errors associated with double values. 
So if you want to compare whether a double value belongs to a range 
(a point is a closed interval with equal limts), 
you can change the limits (depends on what your want to do) 
of the range slightly to avoid storing errors.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="global variable"></category><category term="programming"></category><category term="traps"></category><category term="CRAN"></category></entry><entry><title>R Markdown Tips</title><link href="https://outdated.legendu.net/blog/rmarkdown-tips/" rel="alternate"></link><published>2016-06-09T17:52:05-07:00</published><updated>2017-04-09T17:52:05-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-06-09:/blog/rmarkdown-tips/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf"&gt;RMarkdown Reference&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;rmarkdown â€¦&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf"&gt;RMarkdown Reference&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;rmarkdown&lt;/code&gt; package is preferred to the &lt;code&gt;markdown&lt;/code&gt; package.
There is also a small bug with the &lt;code&gt;markdown&lt;/code&gt; package. 
&lt;code&gt;markdown::markdownToHTML&lt;/code&gt; does not render markdown title of the format &lt;code&gt;##Title&lt;/code&gt; correct.
A space is required after &lt;code&gt;#&lt;/code&gt; for &lt;code&gt;markdownToHTML&lt;/code&gt; to work.
However, 
&lt;code&gt;rmarkdown::render&lt;/code&gt; works well on both situations. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are several ways to pass values between the R workspace and R Markdown.
One way is to use global variables (from the R workspace) in R Markdown directly.
However, 
you have to tell R Markdown the right working environment using the option &lt;code&gt;envir = 0&lt;/code&gt;.
Without this, 
R Markdown uses the current working environment 
which might not be the global working environment
(e.g., when &lt;code&gt;knit&lt;/code&gt; is called inside a function). 
Sometimes, 
it is more convenient to substitute patterns in R Markdown with required values directly.
Make sure to use unique patterns if you do it in this.
For example, 
if you want to pass a variable &lt;code&gt;site&lt;/code&gt; by substituting into R Markdown,
a good way is to replace pattern &lt;code&gt;${site}&lt;/code&gt; (instead of plain &lt;code&gt;site&lt;/code&gt;) with the value of the variable &lt;code&gt;site&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid doing complicated calculations in RMakrdown. 
Separted the code for calculation, etc., and use rmakrdown for reporting purpose mostly ...,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;plotly&lt;/code&gt; (for graphics) and &lt;code&gt;DT&lt;/code&gt; (for tables) are great visualization tools to use with R Markdown.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="programming"></category><category term="CRAN"></category><category term="R Markdown"></category><category term="Markdown"></category><category term="R"></category></entry><entry><title>Missing Values in R</title><link href="https://outdated.legendu.net/blog/missing-values-in-R/" rel="alternate"></link><published>2016-06-09T17:23:35-07:00</published><updated>2017-04-09T17:23:35-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-06-09:/blog/missing-values-in-R/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;NA can be of â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;NA can be of any type, just need to convert the type ..., be careful .... as.numeric(NA)&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="programming"></category><category term="CRAN"></category><category term="R"></category><category term="missing values"></category><category term="NA"></category><category term="NaN"></category></entry><entry><title>Using SQL in R</title><link href="https://outdated.legendu.net/blog/using-sql-in-r/" rel="alternate"></link><published>2016-01-08T15:47:42-08:00</published><updated>2017-04-08T15:47:42-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-01-08:/blog/using-sql-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is suggested that â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is suggested that you do not use paste to concatenate SQL queries, 
but rather have a complete SQL query with special marked variables 
and then substitute the marked variables with aproprivate values. 
This makes the SQL code much easier to understand. 
For example,&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;select&lt;/span&gt;
&lt;span class="s"&gt;    id,&lt;/span&gt;
&lt;span class="s"&gt;    name&lt;/span&gt;
&lt;span class="s"&gt;from&lt;/span&gt;
&lt;span class="s"&gt;    table&lt;/span&gt;
&lt;span class="s"&gt;where&lt;/span&gt;
&lt;span class="s"&gt;    id in (${IDs})&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can then substitute &lt;code&gt;${IDs}&lt;/code&gt; with the right values.&lt;br&gt;
Some people might against this due to injection attack,
but I really do not think this is a problem 
as database users usually do not have write permissions to public tables.
I value readability more here.&lt;/p&gt;
&lt;h2 id="jdbc"&gt;JDBC&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;RJDBC&lt;/code&gt; is a usable but has some glitches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You cannot end a SQL statement with a semicolon when using &lt;code&gt;RJDBC&lt;/code&gt;.
This means that you can send only a single query at a time when using &lt;code&gt;RJDBC&lt;/code&gt;,
which is not efficient.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;RJDBC::dbWriteTable&lt;/code&gt; has a bug for Teradata. 
As an workaround, 
you can generate SQL statement to insert data by yourself
(which is tedious of course). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RJDBC has a bug on schema when checking whether a table exists or not.
For exampel, if there is a (non volatile) table &lt;code&gt;p_chdu_t.employees&lt;/code&gt;.
'dbExistsTable('employees')' returns &lt;code&gt;TRUE&lt;/code&gt; 
but &lt;code&gt;dbExistsTable('p_chdu_t.employees')&lt;/code&gt; returns &lt;code&gt;FALSE&lt;/code&gt;.
This impacts server functions in RJDBC.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="odbc"&gt;ODBC&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;RODBC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;teradataR&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="programming"></category><category term="CRAN"></category><category term="SQL"></category><category term="database"></category><category term="RJDBC"></category><category term="teradataR"></category><category term="RODBC"></category></entry><entry><title>Install the Latest Version of R in Ubuntu</title><link href="https://outdated.legendu.net/blog/install-the-latest-version-of-R-in-ubuntu/" rel="alternate"></link><published>2017-02-20T23:46:45-08:00</published><updated>2017-02-20T23:46:45-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2017-02-20:/blog/install-the-latest-version-of-R-in-ubuntu/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-add-repository&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;deb â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-add-repository&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;deb http://cran.rstudio.com/bin/linux/ubuntu xenial/&amp;quot;&lt;/span&gt;
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-key&lt;span class="w"&gt; &lt;/span&gt;adv&lt;span class="w"&gt; &lt;/span&gt;--keyserver&lt;span class="w"&gt; &lt;/span&gt;keyserver.ubuntu.com&lt;span class="w"&gt; &lt;/span&gt;--recv-keys&lt;span class="w"&gt; &lt;/span&gt;E084DAB9
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;r-base-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If &lt;code&gt;apt-add-repository&lt;/code&gt; is not install yet, 
you can install it with the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;software-properties-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Programming"></category><category term="programming"></category><category term="R"></category><category term="CRAN"></category><category term="Ubuntu"></category><category term="install"></category><category term="latest"></category></entry><entry><title>String in R</title><link href="https://outdated.legendu.net/blog/string-in-r/" rel="alternate"></link><published>2012-11-20T19:36:57-08:00</published><updated>2016-11-20T19:36:57-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-20:/blog/string-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;The R package &lt;code&gt;stringi â€¦&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;The R package &lt;code&gt;stringi&lt;/code&gt; is a great one. 
It is suggested you used string functions in the &lt;code&gt;stringi&lt;/code&gt; package
rather than in the base package (&lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, etc.) when possible. &lt;/p&gt;
&lt;h2 id="functions-in-the-stringi-package"&gt;Functions in the "stringi" Package&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;stri_trans_totitle&lt;/code&gt;
&lt;code&gt;%s+%&lt;/code&gt; pastes 2 strings together. 
Vector is opteration is supported. 
However, 
there is one difference between &lt;code&gt;%s+%&lt;/code&gt; and &lt;code&gt;paste&lt;/code&gt;.
Applying &lt;code&gt;%s+%&lt;/code&gt; on &lt;code&gt;NA&lt;/code&gt; returns &lt;code&gt;NA&lt;/code&gt;
while paste treats &lt;code&gt;NA&lt;/code&gt; as an empty string.
Actually all &lt;code&gt;stri_*&lt;/code&gt; functions respect &lt;code&gt;NA&lt;/code&gt; propagation, 
that is applying any &lt;code&gt;stri_*&lt;/code&gt; function on &lt;code&gt;NA&lt;/code&gt; returns &lt;code&gt;NA&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;R 3.3.0 and above: validUTF8(x)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;chartr&lt;/code&gt; can be used to substitute old characters to new characters. 
If new character is null then this functions can be used
to drop characters from the original string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;nchar&lt;/code&gt; can be used to get the length of characters 
while function &lt;code&gt;length&lt;/code&gt; can only be used to get the length of vectors or matrixs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For special characters, 
we can put a backslash before it to get it,
or I think we can put it into a pair of single quotation mark.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R function &lt;code&gt;paste&lt;/code&gt; can concatenate several vectors 
and it can also concatenate the elements in a vector. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using function &lt;code&gt;expression&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt; we can achieve symbolic computation. 
In addition, function &lt;code&gt;parse&lt;/code&gt; might be useful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;match.arg&lt;/code&gt; can be used to partially match strings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To replace a substring of a string with a new one, 
you can use &lt;code&gt;sub&lt;/code&gt; or &lt;code&gt;gsub&lt;/code&gt;. 
The difference between &lt;code&gt;sub&lt;/code&gt; and &lt;code&gt;gsub&lt;/code&gt; is that &lt;code&gt;sub&lt;/code&gt; only replaces the first occurrence 
while &lt;code&gt;gsub&lt;/code&gt; replaces all occurrences. 
However, sometimes, 
you might want to replace substring by index 
which gives more accurate control of substituting. 
For example, 
when there are multiple  occurrences of a substring 
and you only want to replace the 2nd one,
then neither &lt;code&gt;sub&lt;/code&gt; nor &lt;code&gt;gsub&lt;/code&gt; works well here. 
&lt;code&gt;substr&lt;/code&gt; and &lt;code&gt;substring&lt;/code&gt; are good alternatives in this situation. 
These two functions work similarly to vectors and matrices, 
which means that you can use these two functions to both extract and replace substrings. 
If you want to replace an element of a vector/matrix to a new one, 
you can just assign a new value to the element. 
Similarly to replace substring of an object string using &lt;code&gt;substr&lt;/code&gt; or &lt;code&gt;substring&lt;/code&gt;, 
you can simply assign a new value for the substring. 
However, &lt;code&gt;substr&lt;/code&gt; and &lt;code&gt;substring&lt;/code&gt; can only replace a substring with the same length, 
if the argument &lt;code&gt;replacement&lt;/code&gt; is not long enough, 
then only partial of the substring specified will be replaced; 
if the argument &lt;code&gt;replacement&lt;/code&gt; is too long, 
then it will be truncated to have the same length with the substring to be replaced. 
If you want to replace a substring specified by index with any new string, 
you can use &lt;code&gt;dclong.String::strReplace&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;strwidth&lt;/code&gt; calculates the width of a string when displayed on a graphics device.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;strsplit&lt;/code&gt; splits a string according to specified delimiters.
strsplit&lt;code&gt;is based on regular expression by default. 
You can use literal string by specifying the option&lt;/code&gt;fixed = TRUE&lt;code&gt;(similar to other regular expression functions).
For example, 
you can use the following code 
to split&lt;/code&gt;NCO_MTG_Per_L1 + LHPIRT_b + URD_b` using the plus sign.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;strsplit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NCO_MTG_Per_L1 + LHPIRT_b + URD_b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fixed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that splitting an empty string results in an empty string,
which is not a good behavior. 
Returning an empty string is better.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;strsplit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1:2:3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="nf"&gt;character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If none of the strings end with the delimiter, 
then a trick to resolve the issue is to add an extra delimiter to each string before splitting.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;strsplit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1:2:3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="io"&gt;IO&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;By default, 
characters read into R by &lt;code&gt;read.table&lt;/code&gt; (and alike functions) is converted to factors. 
While it makes modeling convenient in R, 
it's usually inconvenient if you have to manipulate the data. 
The problem is nicely solved with the option &lt;code&gt;stringasis=T&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;cat&lt;/code&gt; can be used to display numbers 
and characters without quotation marks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="encoding"&gt;Encoding&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Function &lt;code&gt;iconv&lt;/code&gt; is very useful for transforming codings 
between different encoding schemes.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="formatting"&gt;Formatting&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Function &lt;code&gt;format&lt;/code&gt; is very useful to display numbers 
and characters in the same length.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="regular-expression"&gt;Regular Expression&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Sometimes we use &lt;code&gt;\\1&lt;/code&gt; to stand for the string in the first parenthesis in &lt;code&gt;patter&lt;/code&gt; argument. 
When we use &lt;code&gt;\\11&lt;/code&gt; it the string in the first parenthesis in &lt;code&gt;pattern&lt;/code&gt; argument followed by &lt;code&gt;1&lt;/code&gt;, 
even if there're at least &lt;code&gt;11&lt;/code&gt; parenthesis in the pattern argument. 
This means that while regular expression is convenient to work with strings, 
it's easy to make mistakes. 
It's a two-sided sword.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="programming"></category><category term="characters"></category><category term="string"></category><category term="CRAN"></category></entry><entry><title>Tips for R Packages</title><link href="https://outdated.legendu.net/blog/tips-for-r-packages/" rel="alternate"></link><published>2012-11-23T22:30:01-08:00</published><updated>2016-10-23T22:30:01-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-23:/blog/tips-for-r-packages/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Popular Repositories for R â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Popular Repositories for R Packages&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cran.r-project.org/web/views/"&gt;CRAN Task Views&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;CRAN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OmegaHat&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SVGAnnotation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.omegahat.org/R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Bioconductor &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the R package &lt;code&gt;BiocInstaller&lt;/code&gt; 
(produced by Bioconductor to facilitate installing other packages on Bioconductor) 
has been installed, 
you can use the following code to install a package named &lt;code&gt;pkgname&lt;/code&gt; on Bioconductor.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#load package BiocInstaller&lt;/span&gt;
&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BiocInstaller&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#install package &lt;/span&gt;
&lt;span class="nf"&gt;biocLite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pkgname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the R package &lt;code&gt;BiocInstaller&lt;/code&gt; has not been installed yet, 
you can use the following command to install it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://bioconductor.org/biocLite.R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It will be automatically loaded after installation. 
Note that you do not have to install package &lt;code&gt;BiocInstaller&lt;/code&gt; again next time when
you want to install other packages on Bioconductor. 
All you need is just to load it and use the &lt;code&gt;biocLite&lt;/code&gt; to install packages (see code shown before).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;biocLite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;limma&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;biocLite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;arrayQualityMetrics&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;biocLite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;GO.db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;QuasiSeq&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;functions for BioConductor objects, sometimes, it doesn't work, 
because you haven't load the package yet. This is misleading ....&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade Bioconductor packages.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;biocLite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Upgradable&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;If you use R on a Linux server which you do not have root access, 
you have to create your own r library to install packages into. 
You can use any directory which you have read and write access as your own R library. 
For example, 
you can create a directory named &lt;code&gt;.r-lib&lt;/code&gt; in your own home directory 
and to make R attach your library to the beginning of the search path automatically 
(so that you do not have to specify library path or to use &lt;code&gt;.libPaths&lt;/code&gt; to attach it manually), 
you can put file named &lt;code&gt;.Renviron&lt;/code&gt; in your home directory with the following content.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;R_LIBS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/home/username/r-lib-PATH&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code&gt;username&lt;/code&gt; is your user name and &lt;code&gt;r-lib-path&lt;/code&gt; is your personal R library. 
It is suggested that you create a personal R library even if you use R on your own Linux machine. 
So the above tips also apply if you run R on your own machine with Linux operating system.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;library&lt;/code&gt; load a package into R workspace. 
If the package to be load is not in the search path, 
you can specify its path by the option &lt;code&gt;lib.loc&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;.libPaths&lt;/code&gt; function gets/sets the library trees within which packages are looked for. 
For example, 
to add a library path to into the library trees, 
you can use &lt;code&gt;.libPaths(c(.libPaths(), yourNewPath))&lt;/code&gt;. 
The library paths in the library trees are searched in order.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you know the name of the R package that you want to install, 
then you can use &lt;code&gt;install.packages&lt;/code&gt; to install the package for you. 
For example if you want to install R &lt;code&gt;xlsx&lt;/code&gt;, 
you can use &lt;code&gt;install.packages("xlsx")&lt;/code&gt;. 
You can also install a package from local disk use &lt;code&gt;install.packages&lt;/code&gt; 
by specifying the option &lt;code&gt;repos=FALSE&lt;/code&gt; or &lt;code&gt;repos=NULL&lt;/code&gt;. 
For example, 
if file &lt;code&gt;dclong.String_1.0-1.zip&lt;/code&gt; is a package in the working directory of R, 
you can install it using the following command.
This is no longer required in the latest version of R.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dclong.String_1.0-1.zip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To get all objects whose name do not start with a dot 
(Usually objects start with dots are not intended to be used by users.) 
in a package you can use &lt;code&gt;ls(pos="package:pkgname")&lt;/code&gt;. 
If you want to see all objects in a package including these objects starting with a dot, 
you can use &lt;code&gt;ls(pos="package:pkgname", all.names=T)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get the the home package of a package, 
you can use &lt;code&gt;.find.package&lt;/code&gt;. 
For example, 
to get the home folder of &lt;code&gt;dclong.EasySave&lt;/code&gt;, 
you can use &lt;code&gt;.find.package("dclong.EasySave")&lt;/code&gt;.
Another more powerful way is to use &lt;code&gt;system.file&lt;/code&gt;, 
which allows you both directories and files in a package. 
For example, to find the home directory of &lt;code&gt;dclong.EasySave&lt;/code&gt;, 
you can use &lt;code&gt;system.file(package = 'animation')&lt;/code&gt;. 
Instead of finding the home directory, 
you might want to know the path of folder &lt;code&gt;history&lt;/code&gt; in &lt;code&gt;dclong.EasySave&lt;/code&gt;. 
This can be done simply by using
&lt;code&gt;system.file('history',package='dclong.EasySave')&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are huge number of different packages in R and some of them are design for the same purpose, 
so it is inevitable that some functions in different packages have the same name. 
You should very careful when you are using these function. 
It is important to know what packages are load when R is started. 
To avoid confusion, 
we can always add package prefix to the functions that we want to use. 
For example, 
instead of using function &lt;code&gt;dir&lt;/code&gt; in &lt;code&gt;base&lt;/code&gt; package, 
we can use &lt;code&gt;base::dir&lt;/code&gt; if there is another loaded package having function &lt;code&gt;dir&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use functions in a package by its full name 
(i.e. pkgname::funName) even if the package is not loaded. 
For example, 
you can &lt;code&gt;symbolToString&lt;/code&gt; in &lt;code&gt;dclong.String&lt;/code&gt; 
by its full name &lt;code&gt;dclong.String::symbolToString&lt;/code&gt; even if &lt;code&gt;dclong.String&lt;/code&gt; is not loaded.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you write a package, 
you might want to link some function in other packages. 
To do so, you can use&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;\&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PkgName&lt;/span&gt;&lt;span class="p"&gt;]{&lt;/span&gt;&lt;span class="n"&gt;FunName&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To load a package, 
you can use either &lt;code&gt;library&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt;, 
and you do not have to pass the name of the package as character 
(i.e. you do not have to put the name of the package into two double/single quotation marks. 
Surely it works if you pass the name of the package as character.).
The difference between &lt;code&gt;library&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; is that &lt;code&gt;library&lt;/code&gt; returns all loaded packages 
while &lt;code&gt;require&lt;/code&gt; return a boolean value indicate whether the loading succeed or not. 
If you want to unload a package &lt;code&gt;pkgName&lt;/code&gt; from the workspace, 
you can use command &lt;code&gt;detach(package="pkgName")&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Package &lt;code&gt;MASS&lt;/code&gt; has many useful functions such as &lt;code&gt;ginv&lt;/code&gt; 
and &lt;code&gt;mvrnorm&lt;/code&gt; which can be used to generate multivariate normal random variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Package &lt;code&gt;Mvtnorm&lt;/code&gt; has functions which can generate multivariate t random variables 
and multivariate normal random variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Package &lt;code&gt;LearnBayes&lt;/code&gt; and &lt;code&gt;coda&lt;/code&gt; are very useful for Bayes. 
And there are many statistics distributions defined in this package &lt;code&gt;LearnBayes&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Package &lt;code&gt;xtable&lt;/code&gt; is useful for outputting objects in R in special format, 
e.g. html or latex.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tensor&lt;/code&gt; in package &lt;code&gt;tensor&lt;/code&gt; can calculate tensor product of arrays.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Package &lt;code&gt;Rweka&lt;/code&gt; supplies an R interface to Weka which is famous for machine learning.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;genalg R based genetic algorithm for binary and floating point chromosomes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Package &lt;code&gt;e1071&lt;/code&gt; : support vector maching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are many useful functions in &lt;code&gt;utils&lt;/code&gt;. 
If you do not know whether there is a function in R which can do your job, 
you can first check functions in &lt;code&gt;utils&lt;/code&gt;. 
To see all functions in &lt;code&gt;utils&lt;/code&gt;, 
you can use &lt;code&gt;ls(package:utils)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a package with a namespace, 
these objected not exported cannot be accessed directly by users. 
This is somehow similar to the concept of class in Java. 
Private methods and instances variables of class cannot be accessed by users directly. 
So you can use non-exported functions 
(similar to private/helper methods in Java)
and non-exported variables (similar to private instances in Java) to help make coding easy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="bioconductor"&gt;Bioconductor&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bioconductor is a free, open source and open development
software project for the analysis and comprehension of genomic
data generated by wet lab experiments in molecular biology.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;limma&lt;/code&gt; is a famous package among these packages in Bioconductor
project. It performs linear model analysis for microarray data.
But be careful that currently (version 2.8 or earlier) doesn't
support mixed linear model, i.e. the covariance structure of the
linear model must be &lt;span class="math"&gt;\(\sigma^2 I_n\)&lt;/span&gt; if you want to use &lt;code&gt;limma&lt;/code&gt;
to do analysis on microarray data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;q.jabes&lt;/code&gt; of Nettleton's code is based on the method that
Nettleton published in JABES (2006). It is optim... bh.. is
relatively conservative. Benjamini H..&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Important Packages and Functions in R&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(1) About Optimization&lt;br&gt;
Since we often use maximum likelihood method to solve problems,
we have to do optimization very often. There are some functions
in R which can help us:&lt;/p&gt;
&lt;p&gt;(i) &lt;code&gt;optimize/optimise{stats}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;used for 1-dimensional optimization only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a interval where the maximum/minimum is expected should
    be specified.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(ii) &lt;code&gt;optim{stats}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;can be applied to multiply dimensions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;includes many advanced algorithms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;initial values of the parameters are needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a hessian matrix can be returned if needed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(iii) &lt;code&gt;nlm{stats}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;can be applied to multiply dimensions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;uses Newton-type algorithm, which means that smoothness is required.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;initial values of the parameters are needed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(iv) &lt;code&gt;constrOptim{stats}&lt;/code&gt;
This function is similar to the function &lt;code&gt;optim&lt;/code&gt; except that it can handles linear constraints on parameters. 
Actually this function add a logarithmic barrier and calls function &lt;code&gt;optim&lt;/code&gt;. 
So it has the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;can be applied to multiply dimensions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;can do optimization with linear constraints.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;uses an adaptive barrier algorithm.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;similar output as function &lt;code&gt;optim&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(v) &lt;code&gt;nlminb{stats}&lt;/code&gt;
This function can do both unconstrained and constrained optimizations using PORT routines.&lt;/p&gt;
&lt;p&gt;Comment: generally speaking, I think function &lt;code&gt;optim&lt;/code&gt; in R is
more useful for statisticians. However, for 1-dimensional
optimization problem, function &lt;code&gt;optimize/optimise&lt;/code&gt; is
recommended because it is written specially for 1-dimensional
problems and thus can give us more precise results. For
constrained optimizations, function &lt;code&gt;constrOptim&lt;/code&gt; and &lt;code&gt;nlminb&lt;/code&gt;
are recommended.&lt;/p&gt;
&lt;p&gt;(2) About Linear Models&lt;/p&gt;
&lt;p&gt;(i) &lt;code&gt;lm{stats}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;fits linear models including linear regression and
    analysis of variance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;can also fits general linear models for given
    transformations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;returns an object of class &lt;code&gt;lm&lt;/code&gt; or for multiple
    responses of class c(&lt;code&gt;mlm&lt;/code&gt;,&lt;code&gt;lm&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(ii) &lt;code&gt;nls{stats}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;fits non-linear models.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;returns an object of class &lt;code&gt;nls&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(iii) &lt;code&gt;lme{nlme}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;fits linear mix-effect models.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;returns an object of class &lt;code&gt;lme&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;can fit unequal variance model, use option 
    {weights=varIdent(...)`&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(iv) &lt;code&gt;lmer{lme4}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;fits linear mix-effect models.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;returns an object of class &lt;code&gt;mer&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(v) &lt;code&gt;gls{nlme}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;fits linear models using generalized least squares.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;returns an object of class &lt;code&gt;gls&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(vi) &lt;code&gt;glm{stats}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;fits generalized linear models.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;returns an object of class inheriting from &lt;code&gt;glm&lt;/code&gt; which
    inherits from class &lt;code&gt;lm&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(vii) &lt;code&gt;aov{stats}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(viii)  &lt;code&gt;anova{stats}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(ixiv)  Other Miscellaneous Functions&lt;/p&gt;
&lt;h2 id="unit-test"&gt;Unit Test&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;testthat&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="visualization"&gt;Visualization&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ggplot2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tableplot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rgl (3-D plot using OpenGL)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you install a package, 
you might get a dependency error or error 
which says that a package does not exists (for your version of R). 
This typicially means that the R you installed is too old to use the package. 
Upgrade your R to the new version can usually solve the problem. 
Get clear about this problem ... &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;options(repos = c(CRAN = "http://cran.rstudio.com"))&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://github.com/metacran"&gt;Tools for Better Cran Experience&lt;/a&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Programming"></category><category term="programming"></category><category term="repository"></category><category term="package"></category><category term="OmegaHat"></category><category term="CRAN"></category><category term="R"></category><category term="Bioconductor"></category><category term="biocLite"></category></entry><entry><title>Install Essential and Useful R Packages</title><link href="https://outdated.legendu.net/blog/install-essential-and-useful-r-packages/" rel="alternate"></link><published>2015-01-23T22:27:25-08:00</published><updated>2016-10-23T22:27:25-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2015-01-23:/blog/install-essential-and-useful-r-packages/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;data.table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ggplot2 â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;data.table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;RJDBC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rmarkdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rcpp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;inline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;## biostatistics&lt;/span&gt;
&lt;span class="nf"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://bioconductor.org/biocLite.R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;update.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ask&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;checkBuilt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;unfortunately sometimes fail to upgrade bioconductor packages ... and have to use biocLite('pkg') ...
the problem is largely caused by the fact that you used a single persoanl R libary ....
if you used different R libraries for different versions of R, then you won't have the problem ...
remove.packages("BiocInstaller") and then&lt;/p&gt;
&lt;p&gt;I guess the best way is just to remove R and its library completely and have a branch new installation ....&lt;/p&gt;</content><category term="Programming"></category><category term="CRAN"></category><category term="R"></category><category term="package"></category><category term="essential"></category><category term="Bioconductor"></category></entry><entry><title>Writing R Extensions</title><link href="https://outdated.legendu.net/blog/writing-r-extensions/" rel="alternate"></link><published>2012-11-23T17:13:18-08:00</published><updated>2016-10-23T17:13:18-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-23:/blog/writing-r-extensions/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The following are some tips for using the old fashioned way (using &lt;code&gt;.C&lt;/code&gt; and &lt;code&gt;.Call&lt;/code&gt;) 
to write R extensions. 
The state-of-art way to extend R via C â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The following are some tips for using the old fashioned way (using &lt;code&gt;.C&lt;/code&gt; and &lt;code&gt;.Call&lt;/code&gt;) 
to write R extensions. 
The state-of-art way to extend R via C/C++ is to use the &lt;code&gt;Rcpp&lt;/code&gt; package.
Check &lt;a href="http://dclong.github.io/en/2012/09/rcpp-rocks/"&gt;this post&lt;/a&gt; For tips on using &lt;code&gt;Rcpp&lt;/code&gt; package.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you want to call C code from R, 
the arguments of C functions to be called by &lt;code&gt;.C&lt;/code&gt; must be pointers. 
This means that only simple data sturcture (primitive types and array) 
can be passed between R and C.
By default, 
&lt;code&gt;.C&lt;/code&gt; makes a copy of the arguments to be passed to C functions, 
and thus the corresponding variables/objects in R are unchanged. 
If a large array/vector is to be passed to C, 
you can suppress copying using the option &lt;code&gt;DUP=FALSE&lt;/code&gt; to increase performance.&lt;br&gt;
However, 
the corresponding variables/objects in R will be changed if the C code mutates them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is very annoying to work with pointer in C, 
however, 
you are forced to work with pointer if you want to C functions for calling in R. 
One suggestions is to avoid using pointers in functions except
the call that you directly call from R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A matrix in R is essentially a vector with "dim" property, 
so when you pass a matrix to a C function from R, 
you actually pass a 1-dimensional array to the C function. 
This is a place inviting errors. 
Because of the way that a 2-D array is saved in C/C++, 
it is more nature to stretch a 2-D array to a 1-D array by rows 
while a matrix in R is stretched to a vector by columns by default. 
So you have be careful that the matrix you passed to C/C++ is 
in the right form that you want. 
If this is a problem, 
tranposing the matrix can be an easy solutions many times.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A good thing about interface with C in R is that the RNG in R can be synced easily. 
To do this, 
you just have to call the C functions that R supplies for generating random numbers, 
and surround them in &lt;code&gt;GetRNGstate();&lt;/code&gt; and  &lt;code&gt;PutRNGstate();&lt;/code&gt;. 
For more details, 
please refer to the R extension.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To call C++ code from R, 
you can write C wrapper functions/interfaces (surrounded by  &lt;code&gt;extern "C"{}&lt;/code&gt;) in your C++ code, 
and then call the C wrapper functions/interaces using the &lt;code&gt;.C&lt;/code&gt; function from R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When writing a R package which use external code, 
you do not have to compile it manually on different platforms. 
You just need to place the code into the "src" folder, 
and it will be automatically compiled 
(to the right type of library according to which platform you use) 
when you compile your package. 
What's more, 
&lt;code&gt;library.dynam&lt;/code&gt; helps you to automatically load the compiled code on differently platforms, 
i.e. you don't have to check the type of the platform 
and use &lt;code&gt;dyn.load&lt;/code&gt; to load the compiled code accordingly. 
However, 
you must pass the name of the compiled code to &lt;code&gt;library.dynam&lt;/code&gt; without extension.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="Rcpp"></category><category term="programming"></category><category term="CRAN"></category></entry><entry><title>R Coding Style</title><link href="https://outdated.legendu.net/blog/r-coding-style/" rel="alternate"></link><published>2016-06-23T16:41:21-07:00</published><updated>2016-10-23T16:41:21-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-06-23:/blog/r-coding-style/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You can use the â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You can use the function &lt;code&gt;tidy_souce&lt;/code&gt; in the R package &lt;code&gt;formatR&lt;/code&gt;
to format R code.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;tidy_source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;unformatted.r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;formatted.r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, 
there is a bug in the package &lt;code&gt;formatR&lt;/code&gt;.
For example, 
the &lt;code&gt;formatR&lt;/code&gt; fails to work with the following code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# this is comment&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kc"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Avoid changing the type of object.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="programming"></category><category term="R"></category><category term="CRAN"></category><category term="formatting"></category></entry><entry><title>Existing Bugs in R</title><link href="https://outdated.legendu.net/blog/existing-bugs-in-r/" rel="alternate"></link><published>2012-11-15T21:23:27-08:00</published><updated>2016-08-15T21:23:27-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-15:/blog/existing-bugs-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;R does not give â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;R does not give the right type III sums of squares until version 2.13.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="sums of squares"></category><category term="programming"></category><category term="bug"></category><category term="CRAN"></category></entry><entry><title>Advantages and Disadvantages of R</title><link href="https://outdated.legendu.net/blog/pros-and-cons-of-r/" rel="alternate"></link><published>2012-11-13T22:02:54-08:00</published><updated>2016-07-13T22:02:54-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-13:/blog/pros-and-cons-of-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;h2 id="advantages"&gt;Advantages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;R is opensource â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;h2 id="advantages"&gt;Advantages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;R is opensource.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lots of new packages are being developed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easy to learn, convenient to use.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="disadvantages"&gt;Disadvantages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;R is slow when running loops.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The syntax of R is very flexible (sounds good) 
and it's won't be strongly checked, 
which make it easy to make mistakes sometimes. 
And when you make mistakes, it can be hard to find it out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R does not pass arguments to functions by addresses, 
which means that all arguments will be copied and then passed to functions. 
This not only makes R slow but also inconvenient sometimes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="pros"></category><category term="programming"></category><category term="cons"></category><category term="advantage"></category><category term="disadvantage"></category><category term="R"></category><category term="CRAN"></category></entry><entry><title>Comparison of Values Involving NA in R</title><link href="https://outdated.legendu.net/blog/comparing-values-involving-NA-in-R/" rel="alternate"></link><published>2016-05-10T20:33:23-07:00</published><updated>2016-07-10T20:33:23-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-05-10:/blog/comparing-values-involving-NA-in-R/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The best way to compare values containing &lt;code&gt;NA&lt;/code&gt; in R is to define customized comparison functions.
Here is an example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;na_as_na&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reverse â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The best way to compare values containing &lt;code&gt;NA&lt;/code&gt; in R is to define customized comparison functions.
Here is an example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;na_as_na&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nf"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nf"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;na_as_na&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nf"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;na_as_na&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="nf"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Programming"></category><category term="programming"></category><category term="R"></category><category term="comparison"></category><category term="NA"></category><category term="missing"></category><category term="CRAN"></category></entry><entry><title>Data Structure in R</title><link href="https://outdated.legendu.net/blog/data-structure-in-r/" rel="alternate"></link><published>2010-11-09T18:57:36-08:00</published><updated>2016-07-09T18:57:36-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2010-11-09:/blog/data-structure-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;h2 id="vector-matrix-and-array"&gt;Vector, Matrix and Array â€¦&lt;/h2&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;h2 id="vector-matrix-and-array"&gt;Vector, Matrix and Array&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;A matrix in R is actually a vector with a &lt;code&gt;dim&lt;/code&gt; attribute. 
This means that the fastest way to switch between a vector and matrix 
is to modify the &lt;code&gt;dim&lt;/code&gt; attribute. 
Also since a matrix in R is essentially a vector, 
you have to treat it as a 1-dimensional array 
when you pass it as an argument into C/C++ code .&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="data-frame"&gt;Data Frame&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;A data frame is essentially a list with columns being elements.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="list"&gt;List&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;[] slicing vs [[]] &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="other"&gt;Other&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;To convert a matrix &lt;code&gt;x&lt;/code&gt; to a list with columns being elements of the list, 
you can use &lt;code&gt;as.list(data.frame(x))&lt;/code&gt; 
(Notice that &lt;code&gt;as.list(x)&lt;/code&gt; does not work in this way. 
This is another example demonstrate the difference between data frame and matrix.). 
Though it is neat way, 
it is not the fastest. 
A faster way is to use &lt;code&gt;lapply&lt;/code&gt;, 
e.g., you can use &lt;code&gt;lapply(seq_len(ncol(x)), function(i) x[,i])&lt;/code&gt; to achieve the same purpose.
On the contrary, 
you can use &lt;code&gt;do.call&lt;/code&gt; to convert a list (of vectors/matrices) to a matrix. 
The following is such an example.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;do.call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nf"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We can put functions into a list and then call functions 
using their index, 
which can be very convenient sometimes. 
To put functions into a list, 
we can use either function &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;c&lt;/code&gt;. 
However, 
there're some differences between functions &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;as.list&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;.
Function &lt;code&gt;as.list&lt;/code&gt; coerce an object to a list object. 
If the argument passed to function &lt;code&gt;as.list&lt;/code&gt; is already a list object, 
then it does nothing. 
Function &lt;code&gt;list&lt;/code&gt; puts objects into a list. 
If an argument passed to function &lt;code&gt;list&lt;/code&gt; is already list object, 
it will still put this list object into a list. 
Basically, function &lt;code&gt;c&lt;/code&gt; combine objects passed to it. 
However, if a list and a vector are passed to it, 
each element of the vector becomes an element of the list object (argument). 
If you want the entire vector to be an element of the list, 
you must first use function &lt;code&gt;list&lt;/code&gt; to put it 
into a list and then use function &lt;code&gt;c&lt;/code&gt; to combine these two lists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most built-in functions in R work differently on data frames 
from vectors (matrix and array are similar to vectors), 
because many of them are written in S3 method. 
You have to be very carefully about the object that you are working with. 
For example, 
you can use &lt;code&gt;apply&lt;/code&gt; on both a matrix and a data frame. 
But if you apply a function on the each row of a data frame, 
elements on each row will first be coerced to the same type and then be operated on. 
Since the data in a data frame is usually not the same type, 
this can lead to mistake easily.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sometimes you must be very careful about vectors. 
You need to know how the operations work. 
That's very important!! 
For example &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; work different on vectors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;rep&lt;/code&gt; is useful to get a vector that has a clear structure.
Be careful that the option &lt;code&gt;each&lt;/code&gt; can not be a vector. 
The role of option &lt;code&gt;each&lt;/code&gt; is played by &lt;code&gt;times&lt;/code&gt; in vector case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;aperm&lt;/code&gt; is very useful to transpose an array.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Though a matrix and a data frame are both rectangular in R, 
they are fundamentally different. 
All elements in a matrix have the same type, 
while elements in a data frame do not have share the same type.
It is only required that elements in the same column of a data frame have the same type. 
A column in a data frame usually represent a variable. 
For this reason, 
data frames are frequently used for data environment for fitting models. 
However, sometimes we want to work on rows instead of columns 
(e.g. when fitting model for gene for microarray data), 
then it is not convenient to use data frame. 
You can convert a data frame to a matrix (if possible) by &lt;code&gt;as.matrix&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The difference among &lt;code&gt;apply&lt;/code&gt;. &lt;code&gt;tapply&lt;/code&gt;, &lt;code&gt;lapply&lt;/code&gt; and &lt;code&gt;sapply&lt;/code&gt;.
&lt;code&gt;apply&lt;/code&gt; can be used in many cases and the marginal dimension need to be specified. 
The specified function is applied over the specified margins, 
i.e. for each combination of the specified margin/dimension combination, 
the specified function is applied on the left dimensions. 
For example, &lt;code&gt;apply(aMatrix,MARGIN=1,FUN=aFun)&lt;/code&gt;, 
where &lt;code&gt;aMatrix&lt;/code&gt; is a matrix of dimension &lt;span class="math"&gt;\(n_1\times n_2\)&lt;/span&gt; 
and &lt;code&gt;aFun&lt;/code&gt; is a function, 
means applying &lt;code&gt;aFun&lt;/code&gt; over the first dimension (which is row) of &lt;code&gt;aMatrix&lt;/code&gt;, 
i.e., for each &lt;span class="math"&gt;\(i=1,\ldots,n_1\)&lt;/span&gt; applying &lt;code&gt;aFun&lt;/code&gt; to &lt;code&gt;aMatrix[i,]&lt;/code&gt;;
&lt;code&gt;apply(threeDArray,MARGIN=3,FUN=aFun)&lt;/code&gt;, 
where &lt;code&gt;threeDArray&lt;/code&gt; is an array of dimension &lt;span class="math"&gt;\(n_1\times n_2\times n_3\)&lt;/span&gt; 
and &lt;code&gt;aFun&lt;/code&gt; is as before, 
means applying &lt;code&gt;aFun&lt;/code&gt; over the third dimension, 
i.e. for each &lt;span class="math"&gt;\(i=1, \ldots,n_3\)&lt;/span&gt; applying &lt;code&gt;aFun&lt;/code&gt; to &lt;code&gt;threeDArray[,,i]&lt;/code&gt;;
&lt;code&gt;apply(threeDArray, MARGIN=C(1,2),FUN=aFun)&lt;/code&gt;, 
where &lt;code&gt;threeDArray&lt;/code&gt; and &lt;code&gt;aFun&lt;/code&gt; are as before, 
means applying &lt;code&gt;aFun&lt;/code&gt; over the first and second dimension, 
i.e., for each &lt;span class="math"&gt;\(i=1,\ldots,n_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(j=1,\ldots,n_2\)&lt;/span&gt;, 
applying &lt;code&gt;aFun&lt;/code&gt; to &lt;code&gt;threeDArray[i,j,]&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;tapply&lt;/code&gt; can be used according to factor levels 
which requires a specific factor 
(the INDEX argument can also be a vector and it will be coerced to a factor automatically) index of course. 
&lt;code&gt;lapply&lt;/code&gt; and &lt;code&gt;sapply&lt;/code&gt; are very similar to each other and &lt;code&gt;sapply&lt;/code&gt; is more friendly. 
They can be used to vectors, data frames and lists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you just want to calculate the row/column means/sums, 
then there is no necessary to use &lt;code&gt;apply&lt;/code&gt;, 
instead, 
you can use &lt;code&gt;rowMeans&lt;/code&gt;, &lt;code&gt;colMeans&lt;/code&gt;, &lt;code&gt;rowSums&lt;/code&gt; and &lt;code&gt;colSums&lt;/code&gt;. 
&lt;code&gt;rowMeans&lt;/code&gt; and &lt;code&gt;rowSums&lt;/code&gt; calculate the mean and sum of each row respectively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A matrix in R has both row names and column names. 
A vector in R also have names but not row names nor column names. 
There's no problem to treat a matrix as a vector but error will occur 
if you treat a vector as a matrix. 
To avoid error, 
you must use function &lt;code&gt;as.matrix&lt;/code&gt; to change the vector into a matrix 
and then do operations on the matrix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In R, by default a matrix will be filled by columns. 
If you have to deal with matrices and vectors at the same time, 
e.g. you want to add a vector onto a matrix or so, 
you'd better define the matrix with number of rows equals the length of the vector.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;drop&lt;/code&gt; can delete dimensions of an array with only one level, 
which can be convenient when displaying results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vectors in R can be interpolated both as row vectors and column vectors according to different cases, 
which is for convenience
because whether row or column vectors will be used depend on
conventions. 
However, 
this might cause very serious problems, some times. 
For example, 
if we want to calculate the trace of &lt;span class="math"&gt;\(\boldU\boldV\)' 
where $\boldU\)&lt;/span&gt; and &lt;span class="math"&gt;\(\boldV\)&lt;/span&gt; are both column vectors here, 
we can calculate &lt;span class="math"&gt;\(\boldU'\boldV\)&lt;/span&gt; instead for convenience. 
So we might write code &lt;span class="math"&gt;\(u\%*\%v\)&lt;/span&gt; to do this. 
A potential serous problem is that &lt;span class="math"&gt;\(v\)&lt;/span&gt; might be a &lt;span class="math"&gt;\($1\times n\)&lt;/span&gt; matrix
(which is essentially a row vector) in R, 
and will result a &lt;span class="math"&gt;\(n\times n\)&lt;/span&gt; matrix instead of a number. 
So you write code
(especially for important projects and so on), 
you'd better avoid using these code which can introduce ambiguity. 
For example, 
instead of using &lt;span class="math"&gt;\(\boldU\'\boldV\)&lt;/span&gt;, 
we can use &lt;code&gt;sum(u*v)&lt;/code&gt;, 
then no matter what kind of vectors, 
either row vector (a matrix with one row in R) or column vector, 
&lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; are, 
we will always get the right answer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are many ways to construct a vectors 
(double, character and so on) with a given length in R. 
To construct a list with a given length, 
there are two ways. 
The first way is to first construct a vector of the given length 
and coerce it to a list using &lt;code&gt;as.list&lt;/code&gt;.
For example, 
you can use &lt;code&gt;as.list(rep(0,3))&lt;/code&gt; to construct a list with length 3 in R. 
The other way is to using &lt;code&gt;vector&lt;/code&gt;. 
For example &lt;code&gt;vector("list",3)&lt;/code&gt; constructs a list of length 3 
with all elements being &lt;code&gt;NULL&lt;/code&gt; for you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have a list called &lt;code&gt;myList&lt;/code&gt; 
and you use &lt;code&gt;is.vector(myList)&lt;/code&gt; to check whether it is a vector of not, 
you will get a result &lt;code&gt;TRUE&lt;/code&gt;.
This is not surprising, 
because a list in R is actually a vector with mode &lt;code&gt;list&lt;/code&gt;. 
The default value of option &lt;code&gt;mode&lt;/code&gt; in &lt;code&gt;is.vector&lt;/code&gt; is &lt;code&gt;any&lt;/code&gt;, 
that is why you get the answer &lt;code&gt;TRUE&lt;/code&gt; for the code &lt;code&gt;is.vector(myList)&lt;/code&gt;. 
The usual vectors we talk about are vectors of &lt;code&gt;numeric&lt;/code&gt;, &lt;code&gt;character&lt;/code&gt; and so on. 
So to check whether an R object is a usual sense vector (i.e. not a list), 
you can code like &lt;code&gt;is.vector(myList,"numeric")&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In many situations a vector is equivalent to a matrix with 1 row/column. 
However, there's difference between them. 
The fundamental difference is that they are of different data types. 
So for many functions, 
if you pass a vector to it you get vector, 
and if you pass a matrix with (1 row/column) to it you get a matrix (with 1 row/column).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A null data frame for column combination operation 
is a data frame/matrix 
(Strictly speaking, 
the null data frame is data frame, 
but an empty matrix can be coerced to an empty data frame.
) with 0 column 
(use &lt;code&gt;matrix(nrow=n,ncol=0)&lt;/code&gt; 
to generate a matrix with 0 column) 
and the same number of rows with data frames involved in the operation. 
Similarly, 
a null data frame for row combination operation is a data frame 
with 0 row and the same number of columns 
with data frames involved in the operation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A convenient and efficient way to repeat rows of a matrix/data frame is to extract rows repeatedly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nlevels&lt;/code&gt; returns the number of levels of a factor, 
which is equivalent to &lt;code&gt;length(levels(aFactor))&lt;/code&gt;. 
However, 
the former way is faster and more convenient than the later one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;good idea to pass column names if data format is not consistent
also applies to other programming languages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A very tricky problem: R silently coerce data between different types if needed, 
this is again proved to be a very bad idea. 
For example integers and boolean value, in your problem, that's very bad ...
actually this might not because of the silent coerce problem, 
[] as a function might takes different arguments, the problem is that R never checks type of argument,
this is error-prone,
in future, you should pay extra attension to [], never mix different types ... 
a safe is to alway check the type in the function which is tedious ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mixing integers and row names is a bad idea ...
if you pass integers as rownames ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In R, max/min, etc. does not keep matrix structure.
If you want to keep matrix structure, use &lt;code&gt;ifelse&lt;/code&gt; instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cbind, specify colnames
cbind(x, Scenario=T)
cbind(x, "name with space"=T)
similarly for rbind&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Programming"></category><category term="programming"></category><category term="list"></category><category term="data structure"></category><category term="container"></category><category term="matrix"></category><category term="vector"></category><category term="R"></category><category term="CRAN"></category></entry><entry><title>Tips About Rcpp</title><link href="https://outdated.legendu.net/blog/rcpp-tips/" rel="alternate"></link><published>2013-10-09T18:53:10-07:00</published><updated>2016-07-09T18:53:10-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2013-10-09:/blog/rcpp-tips/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The trick of using â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The trick of using a macro &lt;code&gt;NORCPP&lt;/code&gt; to indicate 
whether you are using the code in Rcpp.
This makes it easier to using the code both natively and in Rcpp
and makes it easier to debug the code.
You have to use the option &lt;code&gt;-D NORCPP&lt;/code&gt; when compiling the code natively using &lt;code&gt;g++/clang++&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Armadillo package is more conveinient to use 
than &lt;code&gt;NumericVector&lt;/code&gt;, &lt;code&gt;NumericMarix&lt;/code&gt;, etc. when using Rcpp.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rcpp doesn't have a uniform integer generator curently, 
someone is working on sample equivalence currently. 
You can use &lt;code&gt;runif&lt;/code&gt; to achive what you want.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I think you misunderstood &lt;code&gt;Rcpp::sugar&lt;/code&gt;, 
I think vectorized version functions return &lt;code&gt;NumericVector&lt;/code&gt;, 
it is just that they can be silently converted &lt;code&gt;arma::rowvec&lt;/code&gt; and so on ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rcpp make vectorized version of random number generation functions, 
however these with prefix &lt;code&gt;Rf_&lt;/code&gt; is non-vectorized. 
They are functions coming from &lt;code&gt;Rmath.h&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you alwasy prefixed functions 
with their namespaces when using Rcpp. 
Without prefixed namespaces,
function name conflictions happen a lot
(e.g., &lt;code&gt;std::abs&lt;/code&gt; and &lt;code&gt;Rcpp::abs&lt;/code&gt;) 
And when this happens, 
it is very tricky and very hard to debug.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;RNGScope&lt;/code&gt; easy to forget, 
the default seed no randomization at all if you do not use it ... 
so it is the first to check if you find some thing wrong with your randomization code. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rcpp does not have bool equivalent. 
Use integers (0 and 1) instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It seems that type is not a big deal for Rcpp, 
because &lt;code&gt;as&amp;lt;type&amp;gt;&lt;/code&gt; takes care of it.
If you pass an object which is not exactly the required type, 
Rcpp tries cast it to the right type.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One way to avoid terminating R becuase of DLL problem by Rcpp 
is to remove all related object every time you restart R. 
Or if there is a better way to check this?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;but you should check source code of &lt;code&gt;rnorm&lt;/code&gt; in Rcpp to see what they used ...
&lt;code&gt;Rf_pnorm&lt;/code&gt; not defined either
Rcpp, don't use functions with same names as r functions, 
potentially C functions, confliction ...
&lt;code&gt;Rf_qbeta&lt;/code&gt;, parameters can be inferred from R documentation
problem of &lt;code&gt;Rf_qnorm&lt;/code&gt;? not definied? what the heck&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="tips"></category><category term="programming"></category><category term="Rcpp"></category><category term="C++"></category><category term="CRAN"></category></entry><entry><title>Input and Output in R</title><link href="https://outdated.legendu.net/blog/io-in-r/" rel="alternate"></link><published>2012-11-09T18:20:45-08:00</published><updated>2016-07-09T18:20:45-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-09:/blog/io-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="readtable-readcsv-readdelim-etc"&gt;read.table, read.csv, read.delim, etc.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you use &lt;code&gt;read.csv&lt;/code&gt;/&lt;code&gt;read.delim&lt;/code&gt; and avoid using &lt;code&gt;read.table&lt;/code&gt;.
This is because that the â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="readtable-readcsv-readdelim-etc"&gt;read.table, read.csv, read.delim, etc.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you use &lt;code&gt;read.csv&lt;/code&gt;/&lt;code&gt;read.delim&lt;/code&gt; and avoid using &lt;code&gt;read.table&lt;/code&gt;.
This is because that the &lt;code&gt;comment.char&lt;/code&gt; is off for &lt;code&gt;read.csv&lt;/code&gt;/&lt;code&gt;read.delim&lt;/code&gt; and on for &lt;code&gt;read.table&lt;/code&gt; by default. 
My experience is that data seldom has comments in them 
and people are usually not aware that &lt;code&gt;comment.char&lt;/code&gt; is on for &lt;code&gt;read.table&lt;/code&gt; by default. 
When there are "comment chararacters" in data which are not intended to be comment characters,
you screw up if you read data using &lt;code&gt;read.table&lt;/code&gt; and forget to turn off comment using &lt;code&gt;comment.char = ''&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, 
lines starting with &lt;code&gt;#&lt;/code&gt; are treated as comment lines 
and thus are ignored when reading data using &lt;code&gt;read.table&lt;/code&gt;, etc.
If a line is not a comment line, 
avoid starting it with &lt;code&gt;#&lt;/code&gt;. 
Or you can specify a different comment character 
(e.g., &lt;code&gt;$&lt;/code&gt; using option &lt;code&gt;comment.char = "$"&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you always use &lt;code&gt;stringsAsFactors = FALSE&lt;/code&gt; 
when constructing a data frame (data.frame, as.data.frame, read.table, read.csv, etc.).
Factors causes more troubles than conveniences. 
If you do need factors (for building models),
just manual convert columns to factors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a data row have an extra column/field (e.g., due to missing quotes in CSV format),
R will not throw error but instead treats the data to have a row names column. 
This results in shifted columns in some (shorter) rows. 
You can examining the format of a data file 
using the function &lt;code&gt;count.fields&lt;/code&gt; 
which counts the number of fields in each line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;read.csv&lt;/code&gt; for standard CSV files while &lt;code&gt;read.csv2&lt;/code&gt; is for European CSV format. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="writetable-writecsv-writedelim-etc"&gt;write.table, write.csv, write.delim, etc.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you write data frames into CSV format.
CSV format has a clear definition. 
If you tell people that a file is in CSV format,
they know how to read it. 
But if you tell people that a file is in a general delimited format,
people have to ask about what the delimiter is 
and whether fields are quoted, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function&lt;code&gt;write.table&lt;/code&gt; writes a data frame or a matrix into a file. 
Note that it can also append data into a file. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nrow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;paste0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;write.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;out.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="nf"&gt;write.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;out.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;col.names&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;By default &lt;code&gt;write.table&lt;/code&gt; output missing values as character NA (&lt;code&gt;na = "NA"&lt;/code&gt;). 
It is suggested that you output missing values as empty strings (na = "") as it is more portable. 
Other programming languages do not recognize character &lt;code&gt;NA's&lt;/code&gt; as missing values. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always quote fields when you write data into CSV format.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;row.names&lt;/code&gt; have different means in &lt;code&gt;read.table&lt;/code&gt; and &lt;code&gt;write.table&lt;/code&gt;.
&lt;code&gt;row.names&lt;/code&gt; is a logical variable indicating 
whether you want to output row names or not in &lt;code&gt;write.table&lt;/code&gt;,
however, it is not a logical variable indicating whether there is a row names in the data.
It is much more complicated. 
Please refer to the R help doc for detailed explanation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you never write row names into files. 
If row names contains useful informtion, 
write row names into file as a column/field.
The reason is that row names causes troubles in IO. 
On one hand,
it is not convenient to read in a file 
with row names into other programming language. 
On another hand,
row names causes side effect in R too.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="ms-excel"&gt;MS Excel&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.thertrader.com/2014/02/11/a-million-ways-to-connect-r-and-excel/"&gt;http://www.thertrader.com/2014/02/11/a-million-ways-to-connect-r-and-excel/&lt;/a&gt;
It is suggested that you avoid using Excel as input/ouput data format. 
CSV is a better alternative.
However, 
if you do have to use Excel as input/output data format,
read the following tips.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are lots of ways to read data from and write data into Excel documents. 
For example, 
packages &lt;code&gt;xlsReadWrite&lt;/code&gt;, &lt;code&gt;xlsx&lt;/code&gt;, &lt;code&gt;RODBC&lt;/code&gt; 
(and many more) all offers ways to import data from and export data to Excel documents. 
&lt;code&gt;xlsx&lt;/code&gt; (which offers &lt;code&gt;read.xlsx&lt;/code&gt; and &lt;code&gt;write.xlsx&lt;/code&gt;) is good package for dealing with Excel spreadsheet.
&lt;code&gt;RODBC&lt;/code&gt; is a universal way to deal with all kinds of databases 
(not just Excel spreadsheet). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is usually very slow to read in (or write to) a large Excel spreadsheet.
It is suggested that you convert large Excel spreadsheets to CSV files first 
and then read in them.
Also, write data into CSV files instead of Excel spreadsheet.
However, 
be careful that the stupid Excel might loss information when converting to CSV format.
Generally speaking, 
this happens when there are very long numbers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Excel might scilently format opened CSV (or imported text) files. 
Generally speaking,
this happens when there are very long numbers in the text file.
Be careful not to introduce undesired changed. 
If you just open a CSV file to view it and do not want change its content, 
then just discard any changes Excel has made. 
If you indeed want to change CSV file in Excel, 
keep your fingers cross. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="binary-data"&gt;Binary Data&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The function &lt;code&gt;readBin&lt;/code&gt; reads in binary data 
and the function &lt;code&gt;writeBin&lt;/code&gt; writes binary data into files. 
Both of the two functions have limits on the size of data that they can deal at a time. 
For large binary data, 
you have to use &lt;code&gt;readBin/writeBin&lt;/code&gt; multiple times to read/write them from/to files.
&lt;code&gt;readBin&lt;/code&gt; and &lt;code&gt;writeBin&lt;/code&gt; are compatible with &lt;code&gt;fwrite&lt;/code&gt; and &lt;code&gt;fread&lt;/code&gt; in MATLAB. 
&lt;code&gt;fread&lt;/code&gt; and &lt;code&gt;fwrite&lt;/code&gt; are C style functions, ... (to be checked for compatible with c/c++). 
However, &lt;code&gt;readBin&lt;/code&gt; and &lt;code&gt;writeBin&lt;/code&gt; is not compatible with 
Java classes &lt;code&gt;DataOutputStream&lt;/code&gt; and &lt;code&gt;DataInputStream&lt;/code&gt;. 
To read binary data written using &lt;code&gt;DataOutputStream&lt;/code&gt; from Java, 
you can call Java code for reading binary data using &lt;code&gt;rJava&lt;/code&gt; in R; 
to write binary data that is recognized by &lt;code&gt;DataInputStream&lt;/code&gt; in Java, 
you can call Java code for writing binary data using &lt;code&gt;rJava&lt;/code&gt; in R.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;All most all input/output functions in R support reading data 
from all kinds of source including files, console, clipboard and website.
For example, 
if you have copied a block of data from an Excel document, 
you can read it into R using the following command.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;read.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;clipboard&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is good and quick way to import part of the data from a Excel document into in R. 
You do not have to worry about formula in cells. 
When you read data from Excel, values (instead formulas) are read in.
If the data is on a website, 
you can just pass the URL to &lt;code&gt;read.table&lt;/code&gt; (or &lt;code&gt;read.delim&lt;/code&gt;, &lt;code&gt;read.csv&lt;/code&gt;, etc.) to read it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;print&lt;/code&gt; prints an R object to the R console 
and &lt;code&gt;cat&lt;/code&gt; can print multiple objects to the R console, clipboard or files. 
There is some difference between the outputs generated by these two functions.
Generally speaking, 
if you want to see the content of an object in R scenario 
(keep special characters as they are), 
you want to use &lt;code&gt;print&lt;/code&gt;; 
if you want to see the content in human readable format
(special characters are translated), 
you want to use function &lt;code&gt;cat&lt;/code&gt;.
I have to mention that &lt;code&gt;cat&lt;/code&gt; doesn't work for all types of R objects 
(e.g. objects of &lt;code&gt;xtable&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;scan&lt;/code&gt; is extremely powerful and flexible. 
You can skip first &lt;code&gt;k&lt;/code&gt; lines using the option &lt;code&gt;skip = k&lt;/code&gt;.
For example, 
the following command skips the first 5 lines.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;skip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can skip lines starting with special characters using the option &lt;code&gt;comment.char&lt;/code&gt;.
For example, 
the following command skips lines starting with "#".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;comment.char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can decide which special strings are treated as missing values using the option &lt;code&gt;na.string&lt;/code&gt;.
For example,
the following command treats "NA" as missing values.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;na.string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can limit the number of data values/lines to be read in, etc.
Many input functions in R are based on the function &lt;code&gt;scan&lt;/code&gt;, 
for example, &lt;code&gt;read.table&lt;/code&gt;.
These functions inherits the powerfulness and flexibility of &lt;code&gt;scan&lt;/code&gt;. 
&lt;code&gt;scan&lt;/code&gt; is also helpful for interactive programming. 
For example, you can read a string into the variable &lt;code&gt;input&lt;/code&gt; using the following commmand.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;character&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, &lt;code&gt;scan&lt;/code&gt; is used to read in a vector, 
so the data to be read in &lt;em&gt;at the same time&lt;/em&gt; must be of the same type. &lt;/p&gt;</content><category term="Programming"></category><category term="R"></category><category term="IO"></category><category term="programming"></category><category term="CRAN"></category></entry><entry><title>Filesystem in R</title><link href="https://outdated.legendu.net/blog/filesystem-in-r/" rel="alternate"></link><published>2010-11-06T21:25:28-07:00</published><updated>2016-07-06T21:25:28-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2010-11-06:/blog/filesystem-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dirname&lt;/code&gt; returns the parent â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dirname&lt;/code&gt; returns the parent folder of a file or directory, 
and &lt;code&gt;basename&lt;/code&gt; return the name (without the parent folder) of the file or directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;file.path&lt;/code&gt; joins path components into one path. 
It works similar to &lt;code&gt;paste&lt;/code&gt; which concatenates strings to a single one, 
but it is platform independent.
The following code get the full path of the file &lt;code&gt;1.txt&lt;/code&gt; in the current working directory.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;file.path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;getwd&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;1.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;file.path&lt;/code&gt; does not handle the leading/trailing forward/backword slash(es) well,
but this does not matter as the result is still a valid Linux-style path.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;file.path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;C:/Study/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;1.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C:/Study//1.txt&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The author of this blog has a package named &lt;code&gt;dclong.fs&lt;/code&gt;
which contains a function &lt;code&gt;join_path&lt;/code&gt; 
that can handle leading/trailing forward/backword slash(es) nicely.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are many useful functions in R 
which provide low-level interface to the computer's file and directory system, 
e.g., &lt;code&gt;file.create&lt;/code&gt;, &lt;code&gt;file.exists&lt;/code&gt; and &lt;code&gt;dir.create&lt;/code&gt; and so on. 
If a function for manipulating directories is missing, 
it is probably the same as the function for manipulating files, 
e.g. function &lt;code&gt;file.rename&lt;/code&gt; can also be used to rename a directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;file.info&lt;/code&gt; returns the information of files and directories. 
The "isdir" column of the resulting data frame indicates whether a path stands for a file or a directory. 
For example,&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;file.info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="n"&gt;mtime&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="n"&gt;ctime&lt;/span&gt;
&lt;span class="n"&gt;.&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;777&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2011-11-07&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;38&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2011-10-20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;41&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;atime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt;
&lt;span class="n"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2011-11-07&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;33&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;37&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that &lt;code&gt;file\_test&lt;/code&gt; can also be used to check whether a path is a file or a directory. 
For example,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;file_test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-f&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Often times, one need to use temporary files. &lt;code&gt;tempfile&lt;/code&gt; returns a
vector of character strings which can be used as names for temporary
files. By default the temporary file is created in a temporary
directory returned by &lt;code&gt;tempdir&lt;/code&gt;. For example (the following results
is platform dependent),&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;tempdir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C:\\Users\\adu\\AppData\\Local\\Temp\\Rtmp55KGaO&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;tempfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;output.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C:\\Users\\adu\\AppData\\Local&lt;/span&gt;
&lt;span class="s"&gt;\\Temp\\Rtmp55KGaO\\output.txt122935c&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="excel"&gt;Excel&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Write hyper link into excel (using &lt;code&gt;write.xlsx&lt;/code&gt;) does not work well. 
One workaround is to write the same content into a CSV file (using write.csv).
The hyper links work when you open the CSV file in Excel.
You can then save an Excel copy if really want a Excel spreadsheet.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="filesystem"></category><category term="programming"></category><category term="CRAN"></category><category term="file system"></category></entry><entry><title>Install the R Package "arrayQualityMetrics"</title><link href="https://outdated.legendu.net/blog/arrayQualityMetrics/" rel="alternate"></link><published>2012-04-11T19:11:28-07:00</published><updated>2016-06-11T19:11:28-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-04-11:/blog/arrayQualityMetrics/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I had to use the R package "arrayQualityMetrics" to check the quality of some gene chips. 
Installing this package in Linux takes a few steps. 
The following â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I had to use the R package "arrayQualityMetrics" to check the quality of some gene chips. 
Installing this package in Linux takes a few steps. 
The following is the brief instruction on how to install R package "arayQualityMetrics" in Debian.    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# install the graphics library cairo&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;libcairo2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
&lt;span class="c1"&gt;# install X toolkit intrinsiscs development files&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;libxt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
&lt;span class="c1"&gt;# install development files for the Gnome XML library&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;libxml2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
&lt;span class="c1"&gt;# if you have installed BiocInstaller &lt;/span&gt;
&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BiocInstaller&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;biocLite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;arrayQualityMetrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# if you haven&amp;#39;t installed R package BiocInstaller&lt;/span&gt;
&lt;span class="nf"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://bioconductor.org/biocLite.R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;biocLite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;arrayQualityMetrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Installing R package "arrayQualityMetrics" takes a while, so be patient. &lt;/p&gt;</content><category term="Programming"></category><category term="research"></category><category term="programming"></category><category term="biostatistics"></category><category term="package"></category><category term="arrayQualityMetrics"></category><category term="R"></category><category term="CRAN"></category></entry><entry><title>Graphics in R</title><link href="https://outdated.legendu.net/blog/graphics-in-r/" rel="alternate"></link><published>2012-11-11T18:28:16-08:00</published><updated>2016-06-11T18:28:16-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-11:/blog/graphics-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;par("din")&lt;/code&gt; gets the â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;par("din")&lt;/code&gt; gets the dimension 
(i.e. width and height) of the graphics device.
If no graphics device has been open, 
it opens a new one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To force a plot to have a fixed aspect ratio, 
you can use option &lt;code&gt;asp=aspRatio&lt;/code&gt; in plotting function. 
For example, &lt;code&gt;plot(x, y, asp=1)&lt;/code&gt; makes a scatter plot with aspect ratio 1. 
This is helpful when you do not want a plot to get stretched.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;title&lt;/code&gt; adds titles and axes labels for an existing plot,
so if you forget to specify a title 
or axes labels when you use produce a plot, 
you can use &lt;code&gt;title&lt;/code&gt; to add them into the plot
instead of producing a new plot 
(sometimes it is very time-consuming to produce a plot, 
e.g., when you analyze gene data.). 
&lt;code&gt;legend&lt;/code&gt; adds legends for an existing plot. 
For example, see the code which produces the following image (need to add title).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="image" src="./res/title-legend.pdf"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Functions &lt;code&gt;pdf&lt;/code&gt; and &lt;code&gt;postscript&lt;/code&gt; starts the graphics device driver 
for producing &lt;code&gt;pdf&lt;/code&gt; and &lt;code&gt;ps&lt;/code&gt; graphics respectively, 
which are vectorgraph. 
Similarly, &lt;code&gt;jpeg&lt;/code&gt;, &lt;code&gt;bmp&lt;/code&gt;, &lt;code&gt;png&lt;/code&gt; and &lt;code&gt;tiff&lt;/code&gt; start graphics device driver 
for producing &lt;code&gt;jpeg&lt;/code&gt;, &lt;code&gt;bmp&lt;/code&gt;, &lt;code&gt;png&lt;/code&gt; and &lt;code&gt;tiff&lt;/code&gt; graphics, 
which are bitmaps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are several ways 
to divide a window device to sub window devices (to make plots on them). 
First, you can use &lt;code&gt;par&lt;/code&gt;,
e.g. to divide a window device to &lt;span class="math"&gt;\(2\times3\)&lt;/span&gt; sub window devices, 
you can use &lt;code&gt;par(mfrow=c(2,3))&lt;/code&gt; or  &lt;code&gt;par(mfcol=c(2,3))&lt;/code&gt;. 
The difference between them is the first one display plots by rows 
while the second one display plots by columns. 
Second, 
you can use &lt;code&gt;layout{graphics}&lt;/code&gt;, 
e.g. to divide a window device to two parts vertically 
and then further divide the bottom part into two horizontal parts, 
you can use &lt;code&gt;layout(matrix(c(1,2,1,3)))&lt;/code&gt;. 
Same values in the matrix stand for the same area, 
and they also stand for the order they get used 
among all the sub window devices. 
Third,
you can use &lt;code&gt;split.screen&lt;/code&gt;, 
e.g., 
to achieve what we did using &lt;code&gt;layout&lt;/code&gt;, 
you can use the following command&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;split.screen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nf"&gt;split.screen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To make a plot on sub window device generated by &lt;code&gt;split.screen&lt;/code&gt;, 
you must first active it. 
If you use functions in &lt;code&gt;lattice&lt;/code&gt;, 
you will find that these basically ignore all these 3 functions. 
&lt;code&gt;lattice&lt;/code&gt; has its own way to split window devices. 
To do this, 
you have first save plots made by functions in &lt;code&gt;lattice&lt;/code&gt;, 
and then print these plot at appropriate locations using the generic &lt;code&gt;print&lt;/code&gt;. 
For example, 
the following code make two plots using functions in &lt;code&gt;lattice&lt;/code&gt;, 
and then using &lt;code&gt;print&lt;/code&gt; to display them vertically.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;px1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;histogram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;px2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;bwplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# arrange the 2 plots vertically&lt;/span&gt;
&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;px1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;more&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;px2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first 2 values and the last 2 (3rd and last) values of the option &lt;code&gt;position&lt;/code&gt; 
stand for x and y coordinates of the bottom-left and top-right corner, 
respectively,
of the panel to display the corresponding plot. 
Generally speaking, 
&lt;code&gt;par&lt;/code&gt; is most easy one to use, 
but it can only divide a window device into rectangular sub window devices, 
and you must make plots in the right order for them to show up at the right places;&lt;br&gt;
&lt;code&gt;layout&lt;/code&gt; is also easy to use. 
You can divide a window device into irregular shapes, 
but still you have to make plots in the right order 
to make them to show up at the right place;
&lt;code&gt;split.screen&lt;/code&gt; is not as convenient as &lt;code&gt;par&lt;/code&gt; and &lt;code&gt;layout&lt;/code&gt;, 
but you can divide a window device into irregular sub window devices and
make plot on any sub window device (by calling &lt;code&gt;screen&lt;/code&gt; first) whenever you want; 
perhaps it is most inconvenient to use &lt;code&gt;lattice&lt;/code&gt; to achieve the same purpose. 
You must use functions in &lt;code&gt;lattice&lt;/code&gt;, 
and you have to calculate positions for each sub window device 
and pass it to &lt;code&gt;print&lt;/code&gt;. 
But &lt;code&gt;lattice&lt;/code&gt; has some unique plotting functions 
and it uses more advanced technologies, 
you can reuse saved plots instead of replotting them every time. 
This is similar to how Mathematica handles graphics. 
My suggestion is that you never use &lt;code&gt;lattice&lt;/code&gt; for this kind of job unless necessary.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;plot&lt;/code&gt; is a generic function 
(actually many functions in R are generic functions), 
which be applied to many different types of objects in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;boxplot&lt;/code&gt; can make plot of different data sets without
using function par().&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Into order to recover to the default graph setting, we can save the
information of &lt;code&gt;par&lt;/code&gt; first and reuse it whenever we want to go back
to the default settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;points&lt;/code&gt; add points to a graph; &lt;code&gt;segments&lt;/code&gt; add segments to a graph.
Though these job can be done by &lt;code&gt;plot&lt;/code&gt;, these low level functions
are still useful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mathematica symbols can be used in title and labels of plots
using the &lt;code&gt;expression&lt;/code&gt; function. 
For example,&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xlab&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We can use math expression when plot a graph. To do this, we just
need specify the corresponding label as &lt;code&gt;expression(expr)&lt;/code&gt;, where
"expr" is an appropriate expression in R. For example, if we want to
use Greek symbol &lt;span class="math"&gt;\(\alpha\)&lt;/span&gt;, we can specify "xlab=expression(alpha)".
Whenver we forget how to write mathematica expressions, we can type
in command "demo(plotmath)" which will display corresponding
expression in R for all kinds of math expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sna::gplot.arrow&lt;/code&gt; makes neat arrows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;plot(..., type = "h")&lt;/code&gt; gives us needle plot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;chull&lt;/code&gt; computes convex hull of a given set.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dev.copy2pdf&lt;/code&gt; copies the graphics content on the current graphics
device to a pdf file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better use pdf with dev.off() to make plots, 
this is a universal way ...&lt;br&gt;
avoid problems when working on remote servers&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="http://ggplot2.org/book/"&gt;ggplot2 Book&lt;/a&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Programming"></category><category term="par"></category><category term="R"></category><category term="plot"></category><category term="graphics"></category><category term="programming"></category><category term="CRAN"></category><category term="visualization"></category></entry><entry><title>Data Table in R</title><link href="https://outdated.legendu.net/blog/data-table-in-R/" rel="alternate"></link><published>2016-06-11T17:59:49-07:00</published><updated>2016-06-11T17:59:49-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-06-11:/blog/data-table-in-R/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Avoiding mixing &lt;code&gt;data.table â€¦&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Avoiding mixing &lt;code&gt;data.table&lt;/code&gt; with &lt;code&gt;data.frame&lt;/code&gt; too much.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="programming"></category><category term="CRAN"></category><category term="R"></category><category term="data.table"></category><category term="data table"></category><category term="data.frame"></category><category term="data frame"></category></entry><entry><title>R Configuration</title><link href="https://outdated.legendu.net/blog/R-configuration/" rel="alternate"></link><published>2016-06-11T17:53:43-07:00</published><updated>2016-06-11T17:53:43-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-06-11:/blog/R-configuration/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can customize R â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can customize R libraries to use 
by puting a line &lt;code&gt;R_LIBS="path_to_library"&lt;/code&gt; in the &lt;code&gt;.Renviron&lt;/code&gt; file.
However, 
a tricky thing is that if the specified path does not exist,
then it is ignored without any warning.
So sometimes you think have set up a customized library 
but it does not show up as expected. 
It is probably because you specified a incorrect path.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R: update Renviron.site, not Renviron!!!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="programming"></category><category term="R"></category><category term="CRAN"></category><category term="configuration"></category><category term="settings"></category></entry><entry><title>Data Manipulation Tools in R</title><link href="https://outdated.legendu.net/blog/data-manipulation-tools-in-r/" rel="alternate"></link><published>2016-01-11T17:13:18-08:00</published><updated>2016-06-11T17:13:18-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-01-11:/blog/data-manipulation-tools-in-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;RJDBC&lt;/p&gt;
&lt;p&gt;data.table
do â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;RJDBC&lt;/p&gt;
&lt;p&gt;data.table
do not mix using of data.table and data.frame (too much). &lt;/p&gt;
&lt;p&gt;plyr&lt;/p&gt;
&lt;p&gt;sets&lt;/p&gt;
&lt;h2 id="set-operations"&gt;set operations,&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;no need to sort and unique, R do this automatically
in C++, you need to sort, 
and possibly unique if that's what you need&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="programming"></category><category term="CRAN"></category><category term="data manipulation"></category><category term="data.table"></category><category term="plyr"></category><category term="sets"></category><category term="SQL"></category></entry><entry><title>Format Numbers in R</title><link href="https://outdated.legendu.net/blog/format-numbers-in-R/" rel="alternate"></link><published>2016-06-11T16:55:27-07:00</published><updated>2016-06-11T16:55:27-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-06-11:/blog/format-numbers-in-R/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;When working with dates â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;p&gt;When working with dates, 
it is desirable to format months and days as 2 digits numbers with a leading 0.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%02d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# or &lt;/span&gt;
&lt;span class="nf"&gt;formatC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note: I encounter a bug in formatC before. 
Instead of produce an output like &lt;code&gt;04&lt;/code&gt;, 
it produced &lt;code&gt;4&lt;/code&gt;. 
Unfortunately, 
I had to deliver the project, 
so I quickly fix the problem by substituting spaces with &lt;code&gt;0's&lt;/code&gt;
instead of figuring out what really happen.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Comma delimited numbers.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;formatC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;big.mark&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100,000&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;200,000&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;300,000&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;400,000&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;500,000&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;600,000&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;700,000&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;800,000&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;900,000&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1,000,000&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Programming"></category><category term="programming"></category><category term="R"></category><category term="CRAN"></category><category term="formatting"></category><category term="numbers"></category></entry><entry><title>Find Elements That Appear Multiple Times in R</title><link href="https://outdated.legendu.net/blog/find-elements-that-appear-multiple-times-in-R/" rel="alternate"></link><published>2016-06-11T15:31:16-07:00</published><updated>2016-06-11T15:31:16-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2016-06-11:/blog/find-elements-that-appear-multiple-times-in-R/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FUN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;simplify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# or you can use&lt;/span&gt;
&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;useNA&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;always&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Programming"></category><category term="programming"></category><category term="CRAN"></category><category term="R"></category><category term="frequency"></category><category term="table"></category><category term="multiple times"></category><category term="unique"></category></entry><entry><title>Write R Code that Runs Faster</title><link href="https://outdated.legendu.net/blog/fast-computing-r/" rel="alternate"></link><published>2012-06-26T22:08:17-07:00</published><updated>2015-08-26T22:08:17-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-06-26:/blog/fast-computing-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/run-fast.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;R is a popular statistical software which is famous for enormous amout of
packages. The syntax of R is very flexible with make it convenient at the â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/run-fast.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;R is a popular statistical software which is famous for enormous amout of
packages. The syntax of R is very flexible with make it convenient at the cost
of performance. R is indeed slow compared to many other scripting languages, but
there are a few tricks which can make your R code run faster.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use vector and matrix operation if possible. Theses &lt;code&gt;*apply&lt;/code&gt; functions
are very helpful for this purpose.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid changing the type and size of object in R. Though we use R object
as if they are typeless, they have type actually. Changing the type and size
of a R object forces R to reallocate a memory space which is of course
ineffecient. I have seen so many people writing R code like &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;NULL&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;condition&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;
&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;,&lt;span class="nv"&gt;fun&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    s = rbind(s,fun())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you know the length of &lt;code&gt;s&lt;/code&gt; ahead, it is better to allocate &lt;code&gt;s&lt;/code&gt; as a
vector/list and access its elements in the loop instead of changing its
size. R coerces between different types of object implicitly whenever necessary.
For example, if you have a data frame with columns of the same type, 
you can do many matrix operations on it because R coerces the data frame to 
a matrix when needed. This is very inefficient especially when you have a large 
data frame. A better way is first convert the data frame to a matrix,
and then operate on the matrix. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;foreach(i=1:n) %dopar% {}&lt;/code&gt; to do parallel computing if applicable
(you check my another post on parallel computing). Even if a &lt;code&gt;for&lt;/code&gt; loop is
not parallelizeable, &lt;code&gt;foreach(i=1:n) %do% {}&lt;/code&gt; is a better alternative. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use native code (e.g., Fortran, C/C++) for computationally intensive job if applicable. 
Though native code can increase the performance, there is overheading to invoke native code. 
It is less benefitial to invoke native code many times to do a smart part of job each time. 
You have to use command &lt;code&gt;R CMD SHLIB file_to_compile&lt;/code&gt; to compile native code, 
and use the function &lt;code&gt;dyn.load&lt;/code&gt; to load the shared library object. 
A more convenient way is to use R package "Rcpp" if you are confident about writing C++ code. 
However, you have to pay extra attention when you interact between R and other programming language. 
For example, passing arrays betwwen R and other languages can be tricky. 
For more information about this, refer to &lt;a href="http://dclong.github.io/en/2012/05/r-interface-other-languages/"&gt;this post&lt;/a&gt;.    &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Split big data object (e.g., big data frame or matrix) to smaller ones,
and operate on these smaller objects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid creating too many objects in the each working environment. Not having
enough memeory can not only make your code run slower but also make it fail
to run if have to allocate big vectors. One way to do this is to writing
small functions and run your functions instead of running everything
directly in a working environment. Small functions make sure that objects
can be garbage collected quickly when they are no longer needed. If you leave them in
the working environment, they will never release memory seized. Partition
big work into smaller functions also helps reducing bugs. Aftering creating
and remove big data objects, you can also call the function &lt;code&gt;gc&lt;/code&gt; manually to
collect garbage. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;double(n)&lt;/code&gt; to create a vector of length &lt;code&gt;n&lt;/code&gt; instead of using code
&lt;code&gt;rep(0,n)&lt;/code&gt;, and similar for others.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use matrix instead of data frame wheneve possible. Actually data frame
cause problem in many cases. Only use data frame when necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;to be continued ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="DLL"></category><category term="programming"></category><category term="HPC"></category><category term="high performance computing"></category><category term="parallel"></category><category term="R"></category><category term="memory"></category><category term="GC"></category><category term="speedup"></category><category term="fast"></category><category term="CRAN"></category></entry><entry><title>R for Internet/Web Applications</title><link href="https://outdated.legendu.net/blog/r-for-internet-web-applications/" rel="alternate"></link><published>2012-11-14T22:22:58-08:00</published><updated>2015-05-14T22:22:58-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-14:/blog/r-for-internet-web-applications/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="sendingreceiving-emails"&gt;Sending/Receiving Emails&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are many ways to send email in R.
    First, you can use &lt;code&gt;sendmail{sendmailR}&lt;/code&gt;.
    The following code is a simple test email.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sendmail â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="sendingreceiving-emails"&gt;Sending/Receiving Emails&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are many ways to send email in R.
    First, you can use &lt;code&gt;sendmail{sendmailR}&lt;/code&gt;.
    The following code is a simple test email.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sendmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;firedragon.du@gmail.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;dclong@iastate.edu&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Sending Email from R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;It works&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;control&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;smtpServer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;mailhub.iastate.edu&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In this way, you can attach objects in R directly to the email,
but it does not support email authentication,
and it does not support multiple recipients very well.
Second, you can call code written in other languages in R to send emails.
For example,
you can use &lt;code&gt;rJava&lt;/code&gt; to call Java code to send emails in R.
I have written an R package &lt;a href="https://github.com/dclong/dclong.spt"&gt;dclong.jmail&lt;/a&gt;
based on Java Mail API
which can be used to send/receive emails.
It supports email authentication.
Another way is to use &lt;code&gt;system&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt;
to call executable applications to send emails.
There are many such email applications in Linux system.
For Windows system,
the application &lt;code&gt;sendEmail&lt;/code&gt; written by Brandon zehm is good one,
which support Gmail, multiple recipients and multiple attachments.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="automated-web-browsing"&gt;Automated Web Browsing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;RCurl/httr/XML&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;download.file&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="email"></category><category term="R"></category><category term="Web"></category><category term="programming"></category><category term="network"></category><category term="internet"></category><category term="CRAN"></category></entry><entry><title>Keep Matrix Structure when Extract a Row/Column from a Matrix</title><link href="https://outdated.legendu.net/blog/keep-matrix-structure-r/" rel="alternate"></link><published>2012-08-14T22:04:52-07:00</published><updated>2015-05-14T22:04:52-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-08-14:/blog/keep-matrix-structure-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I talked in the post &lt;a href=""&gt;Abuse of Vector in R&lt;/a&gt; that 
it is often the case that we want keep the matrix sturcture when 
extracting a row â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I talked in the post &lt;a href=""&gt;Abuse of Vector in R&lt;/a&gt; that 
it is often the case that we want keep the matrix sturcture when 
extracting a row/column from a matrix,
i.e., we often want to return a matrix with 1 row/column when extracting 
a row/column from a matrix. 
By default R returns a vector when you extract a row/column from a matrix.
To override this behavior, you can specify the option &lt;code&gt;drop=FALSE&lt;/code&gt; when 
extracting submatrix from matrix. A illustrative example is given below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nrow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,,&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kr"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;On the contrary, if you want to keep the sturcture of a matrix with multiple
rows and columns but convert a matrix with 1 row/column to a vector in R, 
you can the function &lt;code&gt;drop&lt;/code&gt;. See the following example. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;drop(a)
[,1] [,2] [,3] [,4]
[1,]    1    5    9   13
[2,]    2    6   10   14
[3,]    3    7   11   15
[4,]    4    8   12   16
drop(b)
[1]  1  5  9 13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Programming"></category><category term="programming"></category><category term="data structure"></category><category term="algebra"></category><category term="matrix"></category><category term="R"></category><category term="vector"></category><category term="CRAN"></category></entry><entry><title>Easy Made Mistakes when Writing R code</title><link href="https://outdated.legendu.net/blog/mistakes-r/" rel="alternate"></link><published>2012-06-14T22:04:09-07:00</published><updated>2015-05-14T22:04:09-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-06-14:/blog/mistakes-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/mistake.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Being flexible is a two-side sword to R. 
While it make it convenient and productive to use R,
it is also very easy to make mistakes when â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/mistake.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Being flexible is a two-side sword to R. 
While it make it convenient and productive to use R,
it is also very easy to make mistakes when writing R code. 
The following is list of mistakes that happens all the time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Miss passed arguments&lt;br&gt;
This is often due the to "dots" argument (...). 
For example, I used to use VB a lot, so when I 
use the function &lt;code&gt;seq&lt;/code&gt;, I wrote code like this&lt;/p&gt;
&lt;p&gt;seq(1,10,step=2)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Another example is &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat(data,file_name)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You thought you write &lt;code&gt;data&lt;/code&gt; into the file &lt;code&gt;file_name&lt;/code&gt;,
however you just print &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;file_name&lt;/code&gt; to the
console. The annoying things about dots argument is that
it accept any kind of arguments. So whatever you pass to
a function accepting a dots argument, no warning or error 
about argument passing will be shown. The dots argument
opens the Pandor's box. &lt;!---'--&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Global variables&lt;br&gt;
While you can assign values to global variables using &lt;code&gt;=&lt;/code&gt;,
&lt;code&gt;&amp;lt;-&lt;/code&gt; and &lt;code&gt;-&amp;gt;&lt;/code&gt; inside a user-defined function, the change (of the global
variable) is only in effect in the duration of the function. 
When the function ends, the change is no longer in effect. 
In another words, the global variable remains unchanged 
outside the function. To make the change in effect outside the 
function, you must use &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt; and &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt; to assign values to the
global variable. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Priority of operators
The colon (:) operator precede over arithmatic operators 
such as +, -, *, / and so on. However, [] precede over the 
colon operator. When you write code &lt;code&gt;1:n-1&lt;/code&gt;, you thought
you get a vector from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt; while you actually get
a vector from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miss used functions
The function &lt;code&gt;length&lt;/code&gt; is used for querying length of 
vectors not the length of characters. For the later purpose,
use the function &lt;code&gt;nchar&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &amp;amp;&amp;amp; or || on vectors&lt;br&gt;
For vector operation, you should use &amp;amp; and |.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use vectors or missing value as conditions&lt;br&gt;
For if and while statement, the condition must be a non-missing
scaler (a vector of length 1).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;*apply&lt;/code&gt; functions to operate on rows of data frames.
A row of data frame is still a data frame (with 1 row). R is 
evil in the sence that it coerce data type wheneve necessary 
without noticing users. ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="vector"></category><category term="operator"></category><category term="mistake"></category><category term="programming"></category><category term="R"></category><category term="CRAN"></category></entry><entry><title>Skills for R</title><link href="https://outdated.legendu.net/blog/skills-for-r/" rel="alternate"></link><published>2012-11-14T21:59:32-08:00</published><updated>2015-05-14T21:59:32-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-14:/blog/skills-for-r/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Unlike C/C++, Java and SAS, 
you do not have semicolon to indicate the end of a command, 
but you can do this if you like. 
It â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Unlike C/C++, Java and SAS, 
you do not have semicolon to indicate the end of a command, 
but you can do this if you like. 
It is helpful if you have to write multiple commands on a line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R support command/terminal mode, 
and if you open R in a command/terminal window, 
the working directory of R will be the working directory of the command/terminal window. 
For some GUI for R, 
you can only use a single application, 
e.g. you cannot open two Rstudio at the same time. 
But sometimes, 
you might want to open more than one R applications in different directories. 
To do this, 
you can use the command/terminal mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you do not know how use a function, 
you can always type a question mark 
before the function name to open the help document of the function. 
For example, 
if you do not know how to use &lt;code&gt;sum&lt;/code&gt;, 
you can type in &lt;code&gt;?sum&lt;/code&gt; in R console to open the help document for &lt;code&gt;sum&lt;/code&gt;.
Sometimes, 
you might just want see what arguments a function have,
instead of opening the help document. 
In this case, 
you can use &lt;code&gt;args&lt;/code&gt; which display the declaration of a function. 
It is quite often that you want to use a function in R, 
but you cannot remember the name of the function. 
If you still know part of the function name, 
you can type in &lt;code&gt;??partial_name&lt;/code&gt; in R console, 
then R will try to match it with all possible functions using regular expression.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sometimes, 
you might want to hide an object 
(i.e. do not display the object when using the command &lt;code&gt;ls()&lt;/code&gt;) in the R workspace, 
for example if you write a package
which relies on some global variables or some functions that should never by renamed. 
To do this, 
you can give a name to the object starting with a dot. 
For example there are some functions such as &lt;code&gt;.jinit&lt;/code&gt;, &lt;code&gt;.jcall&lt;/code&gt; and so on in R &lt;code&gt;rJava&lt;/code&gt;, 
but you cannot see them by use &lt;code&gt;ls()&lt;/code&gt;. 
If you do want to display all objects including these that start with a dot in R workspace, 
you can use &lt;code&gt;ls(all.names=TRUE)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, 
numerical variables in R are double values 
even you even they do not have decimal digits. 
To use data type of integer, 
you can put an &lt;code&gt;L&lt;/code&gt; after integers. 
For example to assign a integer 5 to a variable &lt;code&gt;aInt&lt;/code&gt;, 
you can use &lt;code&gt;aInt = 5L&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;comment&lt;/code&gt; can be use to set or query &lt;code&gt;comment&lt;/code&gt; of an object in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;with&lt;/code&gt; allows you evaluate an expression 
inside a data environment (usually a data frame), 
so you do not have to attach the data into R workspace 
(Attaching data into R workspace might mark other variables with the same names, 
so it is encouraged to do so.). 
within transform &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;class&lt;/code&gt; gets/sets the class of a R object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;attributes&lt;/code&gt; and &lt;code&gt;attr&lt;/code&gt; can get and set attributes of objects, 
e.g.  it can list names of objects. 
The difference between them is that &lt;code&gt;attributes&lt;/code&gt; can set the attributes of a null object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;str&lt;/code&gt; shows the structure of an arbitrary R object. 
For example, 
if you have a large data frame &lt;code&gt;df&lt;/code&gt; you can use &lt;code&gt;str(df)&lt;/code&gt; to show its structure, 
so that you know what columes (type of data and names) it has.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;ESC&lt;/code&gt; hot key halts current unfinished command, 
which is helpful when you make typo in a command 
(especially when you miss a single/double quotation mark).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Rprof&lt;/code&gt; enables profiling an R is execution, 
which helps you write efficient R code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to run some code 
without writing any intermediate result into the workspace, 
you can put the code into &lt;code&gt;local&lt;/code&gt; surrounded by curly braces. 
However, 
you must use &lt;code&gt;-\&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;-&lt;/code&gt; instead of &lt;code&gt;=&lt;/code&gt; in the code. 
Note that you can use semicolon to separate different commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;exists&lt;/code&gt; checks whether a R object with a given name has been defined. 
For example,&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;aNon_Exist_Object&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;missing&lt;/code&gt; checks whether an argument of a function has been passed a value or not. 
It can only be used inside a function to help check availability of arguments.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;shell("shutdown/s")&lt;/code&gt; (in Windows) 
to shutdown the computer after R has finished computing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When write a user-defined function, 
you'd better return a comprehensive result 
which contains not only the final outcomes 
but also other information such as parameters used in the computation.
This gives you the ability to work on a project in the long term,
especially when the names of variables do not give you much information 
about parameters used in computation 
(typical they do not because otherwise they will be long).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="skills"></category><category term="programming"></category><category term="CRAN"></category></entry><entry><title>How to Submit R Packages to CRAN</title><link href="https://outdated.legendu.net/blog/submit-r-package-cran/" rel="alternate"></link><published>2012-06-03T10:16:02-07:00</published><updated>2015-03-03T10:16:02-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-06-03:/blog/submit-r-package-cran/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
Submit using &lt;a href="http://xmpalantir.wu.ac.at/cransubmit/"&gt;web form&lt;/a&gt; or using ftp following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Upload the .tar.gz file using &lt;strong&gt;anonymous&lt;/strong&gt; as log-in name 
and your &lt;strong&gt;e-mail address&lt;/strong&gt; as password â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
Submit using &lt;a href="http://xmpalantir.wu.ac.at/cransubmit/"&gt;web form&lt;/a&gt; or using ftp following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Upload the .tar.gz file using &lt;strong&gt;anonymous&lt;/strong&gt; as log-in name 
and your &lt;strong&gt;e-mail address&lt;/strong&gt; as password 
to &lt;a href="ftp://CRAN.R-project.org/incoming/"&gt;ftp://CRAN.R-project.org/incoming/&lt;/a&gt;. 
"ftp" is prefereed to "sftp". &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send a message to &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#67;&amp;#82;&amp;#65;&amp;#78;&amp;#64;&amp;#82;&amp;#45;&amp;#112;&amp;#114;&amp;#111;&amp;#106;&amp;#101;&amp;#99;&amp;#116;&amp;#46;&amp;#111;&amp;#114;&amp;#103;"&gt;&amp;#67;&amp;#82;&amp;#65;&amp;#78;&amp;#64;&amp;#82;&amp;#45;&amp;#112;&amp;#114;&amp;#111;&amp;#106;&amp;#101;&amp;#99;&amp;#116;&amp;#46;&amp;#111;&amp;#114;&amp;#103;&lt;/a&gt; about it. 
The email should contain the package name and version in the subject line. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="ftp"></category><category term="sftp"></category><category term="programming"></category><category term="submit"></category><category term="package"></category><category term="CRAN"></category></entry><entry><title>Time and Date in R</title><link href="https://outdated.legendu.net/blog/time-and-date-in-r/" rel="alternate"></link><published>2012-11-14T16:46:40-08:00</published><updated>2015-01-14T16:46:40-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2012-11-14:/blog/time-and-date-in-r/</id><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The function &lt;code&gt;as.Date&lt;/code&gt; and &lt;code&gt;strptime&lt;/code&gt; convert string to dates. 
For these functions to work right, 
you must use the right format.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Programming"></category><category term="R"></category><category term="date"></category><category term="time"></category><category term="programming"></category><category term="CRAN"></category></entry><entry><title>Some Links for R</title><link href="https://outdated.legendu.net/blog/r-links/" rel="alternate"></link><published>2013-10-20T00:00:00-07:00</published><updated>2013-10-20T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:outdated.legendu.net,2013-10-20:/blog/r-links/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://statisticsr.blogspot.com/"&gt;Experience with R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cran.r-project.org/web/views/"&gt;CRAN â€¦&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things under legendu.net/outdated are outdated technologies that the author does not plan to update any more. Please look for better alternatives.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**
Things under legendu.net/outdated are outdated technologies 
that the author does not plan to update any more. 
Please look for better alternatives.
**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://statisticsr.blogspot.com/"&gt;Experience with R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cran.r-project.org/web/views/"&gt;CRAN Task Views&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.statmethods.net/index.html"&gt;Quick R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rdatamining.com/"&gt;RDataMining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.talkstats.com/forumdisplay.php/14-R"&gt;Talk Stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbresearch"&gt;rbresearch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dirk.eddelbuettel.com/code/rcpp.html"&gt;Rcpp Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dirk.eddelbuettel.com/code/rcpp/html/index.html"&gt;Rcpp Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hadley/devtools/wiki/Rcpp"&gt;Rcpp Hadley&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbresearch/LearningRcpp"&gt;LearningRcpp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Programming"></category><category term="links"></category><category term="programming"></category><category term="R"></category><category term="CRAN"></category></entry></feed>